var W=Object.create;var S=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty;var x=s=>S(s,"__esModule",{value:!0});var L=(s,t)=>{for(var e in t)S(s,e,{get:t[e],enumerable:!0})},$=(s,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of k(t))!z.call(s,o)&&(e||o!=="default")&&S(s,o,{get:()=>t[o],enumerable:!(r=I(t,o))||r.enumerable});return s},C=(s,t)=>$(x(S(s!=null?W(_(s)):{},"default",!t&&s&&s.__esModule?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s),M=(s=>(t,e)=>s&&s.get(t)||(e=$(x({}),t,1),s&&s.set(t,e),e))(typeof WeakMap!="undefined"?new WeakMap:0);var u=(s,t,e)=>new Promise((r,o)=>{var i=a=>{try{l(e.next(a))}catch(d){o(d)}},n=a=>{try{l(e.throw(a))}catch(d){o(d)}},l=a=>a.done?r(a.value):Promise.resolve(a.value).then(i,n);l((e=e.apply(s,t)).next())});var F={};L(F,{createCatalog:()=>V,createWorkflow:()=>D});var c=C(require("fs"),1),P=require("child_process"),b=C(require("os"),1),g=C(require("path"),1),O=require("vfile"),R=require("pgsql-parser"),N=require("readline"),p=require("@aws-sdk/client-s3"),A=require("@aws-sdk/credential-providers"),T=(n=>(n.COMMA=",",n.TAB="	",n.SPACE=" ",n.PIPE="|",n.SEMICOLON=";",n.COLON=":",n))(T||{});const w=(0,g.join)(process.cwd(),"node_modules",".bin","mlr@v6.0.0");function B(s){const t=(0,R.parse)(s);c.default.writeFileSync("temp22.json",JSON.stringify(t,null,2));const e=t[0].RawStmt.stmt.SelectStmt,r={type:"select",distinct:!1,columns:[],from:[],sort:{},where:{},group:[],having:[],order:[],limit:{}},o=e.limitOption;if(o==="LIMIT_OPTION_DEFAULT"&&(r.limit={type:e.limitOption}),o==="LIMIT_OPTION_COUNT"&&e.limitCount&&(r.limit={type:e.limitOption,val:e.limitCount.A_Const.val.Integer.ival}),e.distinctClause&&(r.distinct=!0),e.targetList&&(r.columns=e.targetList.map(i=>{const n=i.ResTarget.val.ColumnRef.fields[0];return n.A_Star?{col:"*"}:i.ResTarget.name?{as:i.ResTarget.name,col:n.String.str}:{col:n.String.str}})),r.from=e.fromClause.map(i=>{const n={schemaname:"",relname:"",inh:""},l=i.RangeVar;return l.schemaname&&(n.schemaname=l.schemaname),l.relname&&(n.relname=l.relname),l.inh&&(n.inh=l.inh),n}),e.whereClause){if(e.whereClause.A_Expr&&e.whereClause.A_Expr.kind==="AEXPR_OP"){const i=e.whereClause.A_Expr,n={operator:"",left:{},right:{}};n.operator=i.name[0].String.str,i.lexpr&&(n.left=i.lexpr.ColumnRef.fields[0].String.str),i.rexpr&&(n.right=i.rexpr.ColumnRef.fields[0].String.str),r.where=n}if(e.whereClause.A_Expr&&e.whereClause.A_Expr.kind==="AEXPR_IN"){const i=e.whereClause.A_Expr}if(e.whereClause.BoolExpr){if(e.whereClause.BoolExpr.boolop==="AND_EXPR"){const i=e.whereClause.BoolExpr.args;console.log(JSON.stringify(i,null,2))}if(e.whereClause.BoolExpr.boolop==="OR_EXPR"){const i=e.whereClause.BoolExpr.args;console.log(JSON.stringify(i,null,2))}}}return r}const y=s=>(0,A.fromIni)({profile:s,mfaCodeProvider:t=>u(void 0,null,function*(){return t})});let E;function v(s){return E||(console.log("setting up s3 client"),E=new p.S3Client(s)),E}function j(s,t){const e={file:t&&t.file?t.file:!1};if(!s.startsWith("s3://")||s.split(":/")[0]!=="s3")throw new Error(`invalid-s3-uri: ${s}`);let r="";const o={bucket:"",key:"",file:""},i=s.split(":/")[1],[n,...l]=i.split("/").splice(1);return o.bucket=n,o.key=l.join("/"),l.forEach((a,d)=>{if(d===l.length-1){const f=a.split(".").length;if(e.file&&f===1&&(r=`uri should be a given, given: ${s}`),!e.file&&f===1)return;if(!e.file&&f>1){r=`Invalid S3 uri, ${s} should not end with a file name`;return}!e.file&&a.split(".")[1]!==""&&f>1&&(r=`${s} should not be a file endpoint: ${a}`),f>1&&a.split(".")[1]!==""&&(o.file=a)}}),{data:o,err:r}}var U=(t=>(t[t.LIMIT_OPTION_DEFAUL=0]="LIMIT_OPTION_DEFAUL",t))(U||{});class J{constructor(t,e){this.name=e&&e.name?e.name:g.default.basename(t),this.source=t,this.options=e,this.destination=e.destination,this.env="local",this.init=new Date,this.state="init",this.pcount=0,this.vfile=new O.VFile({path:this.source}),this.stmt={type:"",distinct:!1,columns:[],from:[],sort:[],where:{},group:[],having:[],limit:0}}toJson(){return u(this,null,function*(){const t=this.exec(w,["--icsv","--ojson","clean-whitespace",this.source]);if(!t.stdout)throw new Error(`failed to convert ${this.source} from CSV to JSON`);return t})}toCSV(){return u(this,null,function*(){const t=this.exec(w,["--icsv","--ocsv","cat",this.source]);if(!t.stdout)throw new Error(`failed to convert ${this.source} from JSON to CSV`);return t})}rowCount(){return u(this,null,function*(){const t=yield this.exec(w,["--ojson","count",this.source]),e=yield this.promisifyProcessResult(t);if(e.code!==0)throw new Error(`Error while counting rows: ${e.stderr}`);if(e.stderr)throw new Error(e.stderr);const r=JSON.parse(e.stdout);if(r.length===0)throw new Error("No rows found");return r[0].count})}getColumnHeader(){return u(this,null,function*(){const t=yield this.exec(w,["--icsv","--ojson","head","-n","1",this.source]),e=yield this.promisifyProcessResult(t);if(e.code!==0)return null;if(e.stderr)throw new Error(e.stderr);const r=JSON.parse(e.stdout);if(r.length===0)return null;const o=Object.keys(r[0]);return this.vfile.data.columns=o,o})}preview(t=20,e){return u(this,null,function*(){let r;const o=1024*1024*10,n=yield c.default.promises.stat(this.source);if(e&&e!==this.source&&c.default.createWriteStream(e)instanceof c.default.WriteStream||n.size>o){if(e===void 0)throw new Error("stream-destination-undefined");return r=c.default.createWriteStream(e),(yield this.exec(w,["--icsv","--ojson","head","-n",t.toString(),this.source])).stdout.pipe(r),console.warn(`\u{1F440} Preview saved to: ${e}`),e}const l=yield this.exec(w,["--icsv","--ojson","head","-n",t.toString(),this.source]),a=yield this.promisifyProcessResult(l);if(a.stderr)throw new Error(a.stderr);if(a.code!==0)throw new Error("Error while executing mlr command");return this.vfile.data.preview=JSON.parse(a.stdout),JSON.parse(a.stdout)})}detectShape(){return u(this,null,function*(){const t=this.source,e={type:"",size:0,columns:[],header:!1,encoding:"utf-8",bom:!1,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{},preview:[]};if(!c.default.existsSync(t))throw new Error(`path-doesnt-exists: ${t} ,provide a valid path to a CSV file`);if(e.size=c.default.statSync(t).size,e.size>1024*1024*1024)throw new Error(`file-size-exceeds-limit: ${t} is too large, please limit to under 1GB for now`);if(!c.default.existsSync(t))throw new Error(`${t} does not exist, provide a valid path to a CSV file`);if(b.default.platform()==="win32")throw new Error("scream");const r=this.exec("file",[t,"--mime-type"]),o=yield this.promisifyProcessResult(r);if(o.stderr)throw new Error(`failed-to-detect-mime-type: ${o.stderr}`);if(o.code!==0)throw new Error(`failed-to-detect-mime-type: ${o.stderr}`);e.type=o.stdout.split(":")[1].trim();const i=(0,N.createInterface)({input:c.default.createReadStream(t),crlfDelay:1/0});let n=0;const l=20,a={row:[""],del:""};let d="";const f=[",",";","	","|",":"," ","|"];i.on("line",m=>{if(n===0&&(f.forEach(h=>{m.split(h).length>1&&(a.row=m.split(h),a.del=h)}),(a.del===""||a.row.length<=1)&&(e.errors.unrecognizedDelimiter=`${t} does not have a recognized delimiter`,e.header=!1),a.row.forEach(h=>{isNaN(parseInt(h.substring(0,3)))||(e.header=!1,e.warnings.noHeader="no header found",n++)}),e.header=!0,e.delimiter=a.del,e.columns=a.row),n>0&&n<l){const h=m.split('"').length-1;if(d&&h%2!==0&&(e.spanMultipleLines=!0),h%2!==0&&m.split('""').length-1!==1&&(d=m),m.split(a.del).length!==a.row.length){e.errors.rowWidthMismatch="row width mismatch";return}e.preview.push(m.split(a.del))}n++}),i.on("close",()=>{this.vfile.data.shape=e})})}determineLoader(){if(this.destination.startsWith("s3://")){this.vfile.data.loader=v({credentials:y("default"),region:"us-east-2"});return}(this.source.startsWith("/")||this.source.startsWith("../")||this.source.startsWith("./"))&&(this.vfile.data.loader=c.default.createReadStream(this.source))}determineConnector(){switch(this.env){case"local":if(!c.default.existsSync(this.source))throw new Error(`file: ${this.source} not found, please provide a valid file path`);this.vfile.data.connector=c.default.createReadStream(this.source);break;case"aws":this.vfile.data.connector=v({credentials:y("default"),region:"us-east-2"});break;default:throw new Error(`unsupported-source for: ${this.source}`)}}determineEnv(){if(this.vfile.data.source=this.source,this.source.startsWith("/")||this.source.startsWith("../")||this.source.startsWith("./")){this.env="local";return}if(this.source.startsWith("s3://")){this.env="aws";return}throw new Error(`invalid-source-type: ${this.source}`)}fileSize(){const t=1024*1024*50;if(!c.default.existsSync(this.source))throw new Error(`path-doesnt-exists: ${this.source} ,provide a valid path to a CSV file`);const e=c.default.statSync(this.source);if(e.size>t)throw new Error(`file-size-exceeds-limit: ${this.source} is too large, please limit to 50MB`);return e.size}uploadToS3(){return u(this,null,function*(){if(!this.source||!this.destination)throw new Error("source or destination not set. Both must be defined to upload to S3");const t=c.default.createReadStream(this.source);if(!t.readable)throw new Error("failed-to-read-source: Make sure the provided file is readable");const e=this.fileSize();e>100*1024*1024&&console.warn(`file size ${e} is larger`);const{data:r,err:o}=j(this.destination,{file:!0});if(o.toString().startsWith("invalid-s3-uri"))throw new Error(`failed-to-parse-s3-uri: ${o}`);r.file||(r.file=g.default.basename(this.source),console.warn("Destination filename not provided. Using source source basename"+r.file)),console.log(`uploading ${this.source} to ${this.destination}`);const n=yield v({region:"us-east-2"}).send(new p.PutObjectCommand({Bucket:r.bucket,Key:r.key+r.file,Body:t})).catch(l=>{throw new Error(`failed-upload-s3: Error while uploading to S3: ${l}`)}).finally(()=>{t.close()});if(n.$metadata.httpStatusCode!==200)throw new Error(`failed-upload-s3: Error while uploading to S3: ${n.$metadata.httpStatusCode}`);if(!n.$metadata.requestId)throw new Error(`failed-upload-s3: Error while uploading to S3: ${n.$metadata.httpStatusCode}`);return n.$metadata.requestId})}initMultipartUpload(t,e){return u(this,null,function*(){const r=v({credentials:y("default"),region:"us-east-2"}),o=new p.CreateMultipartUploadCommand({Bucket:t,ContentEncoding:"utf8",ContentType:"text/csv",Key:e}),i=yield r.send(o);if(i.$metadata.httpStatusCode!==200)throw new Error(`failed-multipart-upload: Error while creating multipart upload: ${i.UploadId} with status code ${i.$metadata.httpStatusCode}`);if(!i.UploadId)throw new Error(`failed-multipart-upload: Error while creating multipart upload: ${i.UploadId}`);return i.UploadId})}exec(t,e){if(console.log(`exec: ${t} ${e.join(" ")}`),this.pcount>5)throw new Error(`too-many-processes: ${this.pcount}`);return this.pcount++,(0,P.spawn)(t,e,{})}promisifyProcessResult(t){return u(this,null,function*(){const e={stdout:"",stderr:"",code:0};return yield new Promise((r,o)=>{t.stdout.on("data",i=>{e.stdout+=i}),t.stderr.on("data",i=>{e.stderr+=i}),t.on("close",i=>{e.code=i===0?0:1,r(e)}),t.on("error",i=>{o(i)})})})}}function V(s,t){return u(this,null,function*(){return yield new Promise((e,r)=>{s||r(new Error("failed-to-create-dataset: source is required")),(!t||!t.destination)&&r(new Error("failed-to-create-dataset: destination is required")),s.endsWith(".csv")||r(new Error(`failed to create dataset: ${s}, source must be a csv file`));const o=new J(s,t);Promise.all([o.determineEnv(),o.detectShape(),o.determineConnector(),o.determineLoader()]).then(()=>{console.log(`created catalog for ${s}`),e(o)}).catch(i=>r(i))})})}class q{constructor(t){this.name=t,this.catalogs=new Map,this.createdAt=new Date,this.env="local",this.stmt=""}list(){return Array.from(this.catalogs.values())}remove(t){this.catalogs.delete(t.source)}get(t){if(this.catalogs.get(t)!=null)return this.catalogs.get(t)}add(t){if(Array.isArray(t)){if(t.length===1&&t[0].source){const r=t[0];if(this.catalogs.has(r.source))throw new Error(`duplicate-dataset: ${r.source}`);return this.catalogs.set(r.source,r),r.source}const e=new Set;return t.forEach(r=>{if(this.catalogs.has(r.source))throw new Error(`duplicate-dataset: ${r.source}`);console.log(`added ${r.source} to the workflow`),this.catalogs.set(r.source,r),e.add(r.source)}),Array.from(e)}if(this.catalogs.has(t.source))throw new Error(`duplicate-dataset: ${t.source}`);return this.catalogs.set(t.source,t),console.log(`added ${t.source} to the workflow`),t.source}query(t){const e=B(t);console.log(e)}}function D(s){return new q(s)}module.exports=M(F);0&&(module.exports={createCatalog,createWorkflow});
