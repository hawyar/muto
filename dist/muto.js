var R=(l,t,e)=>{if(!t.has(l))throw TypeError("Cannot "+e)};var p=(l,t,e)=>{if(t.has(l))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(l):t.set(l,e)};var h=(l,t,e)=>(R(l,t,"access private method"),e);var $=(l,t,e)=>new Promise((o,r)=>{var s=i=>{try{n(e.next(i))}catch(c){r(c)}},a=i=>{try{n(e.throw(i))}catch(c){r(c)}},n=i=>i.done?o(i.value):Promise.resolve(i.value).then(s,a);n((e=e.apply(l,t)).next())});import*as u from"fs";import*as W from"os";import{createInterface as U}from"readline";import{spawn as O}from"child_process";import{fromIni as H}from"@aws-sdk/credential-providers";import*as k from"fastq";import{S3Client as A,GetObjectCommand as L,CreateMultipartUploadCommand as V}from"@aws-sdk/client-s3";var v=l=>H({profile:l,mfaCodeProvider:t=>$(void 0,null,function*(){return t})}),w=class{constructor(t,e){this.source=t.source,this.options=t.options,this.createdAt=new Date,this.connector=e}},C,z,y,q,S,M,m,D,x,X,I,Y,E,Z,b,B,T=class{constructor(t){p(this,C);p(this,y);p(this,S);p(this,m);p(this,x);p(this,I);p(this,E);p(this,b);this.name=t,this.datasets=new Map,this.createdAt=new Date,this.env="local",this.queue=k.promise(h(this,C,z),1)}list(){return Array.from(this.datasets.values())}remove(t){this.datasets.delete(t.source)}add(t,e){return new Promise((o,r)=>{if(this.datasets.has(t)&&r(new Error(`Dataset ${e.destination} already exists in the workflow`).message),e.destination===""&&console.warn(`Dataset ${t} does not have a destination`),e.destination&&e.destination.startsWith("s3://")){if(h(this,y,q).call(this,t)){let a=h(this,m,D).call(this,{credentials:v("default"),region:"us-east-2"}),n=new w({source:t,options:e},a);this.datasets.set(t,n),o(n)}r(new Error(`Dataset ${t} does not exist in S3`))}if(t.startsWith("/")||t.startsWith("../")||t.startsWith("./")){t.endsWith(".csv")||r(new Error(`${t} is not a CSV file`));let s=new w({source:t,options:e},h(this,S,M).call(this,t));this.datasets.set(t,s),o(s)}r(new Error(`Invalid source ${t} type`))})}};C=new WeakSet,z=function(o){return $(this,arguments,function*({source:t,options:e}){return new Promise((r,s)=>{if(this.datasets.has(t)&&s(new Error(`Dataset ${e.destination} already exists in the workflow`).message),e.destination===""&&console.warn(`Dataset ${t} does not have a destination`),e.destination&&e.destination.startsWith("s3://")){if(h(this,y,q).call(this,t)){let n=h(this,m,D).call(this,{credentials:v("default"),region:"us-east-2"}),i=new w({source:t,options:e},n);this.datasets.set(t,i),r(i)}s(new Error(`Dataset ${t} does not exist in S3`))}if(t.startsWith("/")||t.startsWith("../")||t.startsWith("./")){t.endsWith(".csv")||s(new Error(`${t} is not a CSV file`));let a=new w({source:t,options:e},h(this,S,M).call(this,t));this.datasets.set(t,a),r(a)}s(new Error(`Invalid source ${t} type`))})})},y=new WeakSet,q=function(t){let{data:e,err:o}=h(this,b,B).call(this,t,{file:!0});if(o||!e.file)return console.error(`Invalid S3 URI: ${t}, URI must point to a file`),!1;let r=h(this,m,D).call(this,{credentials:v("default"),region:"us-east-2"}),s=new L({Bucket:e.bucket,Key:e.file});return r.send(s).then(a=>a.$metadata.httpStatusCode===200&&a.ContentType==="text/csv").catch(a=>(console.error(a),!1)),!1},S=new WeakSet,M=function(t){return u.createReadStream(t)},m=new WeakSet,D=function(t){return t.region||(t.region="us-east-2"),new A(t)},x=new WeakSet,X=function(t){let e={type:"",columns:[""],header:!1,encoding:"utf-8",bom:!1,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{},preview:[[""]]};if(!u.existsSync(t.source))throw new Error(`${t.source} does not exist, provide a valid path to a CSV file`);if(W.platform()==="win32")return console.error("handle windows later"),e;let o=O("file",[t.source,"--mime-type"]);o.stdout.on("data",f=>{let d=f.toString().split(":")[1].trim();d==="text/csv"||d==="text/plain"?e.type=d:e.errors.incorrectType=`${t.source} is not a CSV file`}),o.on("close",f=>{(f!==0||e.type==="")&&console.warn("unable to use file() cmd")});let r=U({input:u.createReadStream(t.source),crlfDelay:1/0}),s=0,a=20,n={row:[""],del:""},i="",c=[",",";","	","|",":"," ","|"];return r.on("line",f=>{if(s===0){c.forEach(g=>{f.split(g).length>1&&(n.row=f.split(g),n.del=g)}),(n.del===""||n.row.length<=1)&&(e.errors.unrecognizedDelimiter=`${t.source} does not have a recognized delimiter`,e.header=!1);let d=/\d+/;if(n.row.some(g=>d.test(g))){e.header=!1,e.warnings.noHeader="no header found",s++;return}e.header=!0,e.delimiter=n.del,e.columns=n.row}if(s>0&&s<a){let d=f.split('"').length-1;if(i&&d%2!==0&&(e.spanMultipleLines=!0),d%2!==0&&f.split('""').length-1!==1&&(i=f),f.split(n.del).length!==n.row.length){e.errors.rowWidthMismatch="row width mismatch";return}e.preview.push(f.split(n.del))}s++}),e},I=new WeakSet,Y=function(t){let e=t.connector},E=new WeakSet,Z=function(t,e,o){return new Promise((r,s)=>{try{let a=h(this,m,D).call(this,{credentials:v("default"),region:"us-east-2"});if(!(a instanceof A))throw new Error(`Invalid operation for ${t.source}`);let n=new V({Bucket:e,ContentEncoding:"utf8",ContentType:"text/csv",Key:o});a.send(n).then(i=>{i.UploadId&&r(i.UploadId),s(new Error("noop"))}).catch(i=>{s(i)}).finally(()=>{console.log("init multipart upload")})}catch(a){s(a)}})},b=new WeakSet,B=function(t,e){let o={file:e&&e.file?e.file:!1};if(!t.startsWith("s3://")||t.split(":/")[0]!=="s3")throw new Error("Invalid S3 URI");let r="",s={bucket:"",key:"",file:""},a=t.split(":/")[1],[n,...i]=a.split("/").splice(1);return s.bucket=n,s.key=i.join("/"),i.forEach((c,f)=>{if(f===i.length-1){let d=c.split(".").length;if(o.file&&d===1&&(r=`uri should be a given, given: ${t}`),!o.file&&d===1)return;if(!o.file&&d>1){r=`Invalid S3 uri, ${t} should not end with a file name`;return}!o.file&&c.split(".")[1]!==""&&d>1&&(r=`${t} should not be a file endpoint: ${c}`),d>1&&c.split(".")[1]!==""&&(s.file=c)}}),{data:s,err:r}};function K(l){return new T(l)}export{K as createWorkflow};
//# sourceMappingURL=muto.js.map
