var A=(o,e,t)=>{if(!e.has(o))throw TypeError("Cannot "+t)};var f=(o,e,t)=>{if(e.has(o))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(o):e.set(o,t)};var l=(o,e,t)=>(A(o,e,"access private method"),t);var p=(o,e,t)=>new Promise((r,s)=>{var n=i=>{try{u(t.next(i))}catch(d){s(d)}},a=i=>{try{u(t.throw(i))}catch(d){s(d)}},u=i=>i.done?r(i.value):Promise.resolve(i.value).then(n,a);u((t=t.apply(o,e)).next())});import*as c from"fs";import k from"path";import{readFileSync as g,writeFileSync as C}from"atomically";import{CreateMultipartUploadCommand as z,GetObjectCommand as U,S3Client as $}from"@aws-sdk/client-s3";import{fromIni as T}from"@aws-sdk/credential-providers";import{spawn as L}from"child_process";import _ from"os";var J=o=>T({profile:o,mfaCodeProvider:e=>p(void 0,null,function*(){return e})}),y=k.join(process.cwd(),"node_modules",".bin","mlr@v6.0.0"),S,E,h,w,P,re,O=class{constructor(e,t){f(this,S);f(this,h);f(this,P);this.source=e,this.cached=!1,this._rowsCount=0,this.destination=t.destination||process.cwd(),this.options=t,this.shape={type:"",columns:[],header:!1,encoding:"",bom:!1,spanMultipleLines:!1,quotes:!1,delimiter:"",errors:{},warnings:{},preview:[]},this.createdAt=new Date,this.state="init",this.processCount=0}toJson(){return p(this,null,function*(){let e=c.createWriteStream(this.destination);return l(this,h,w).call(this,y,["--icsv","--ojson","clean-whitespace","cat",this.source]).stdout.pipe(e),new Promise((r,s)=>{e.on("close",()=>{r(this.source)}),e.on("error",n=>{s(n)})})})}rowsCount(){return p(this,null,function*(){let e=yield l(this,h,w).call(this,y,["--ojson","count",this.source]),t=yield l(this,S,E).call(this,e);if(t.code!==0)throw new Error(`Error while counting rows: ${t.stderr}`);if(t.stderr)throw new Error(t.stderr);let r=JSON.parse(t.stdout);if(r.length===0)throw new Error("No rows found");return this._rowsCount=r[0].count,r[0].count})}columns(){return p(this,null,function*(){let e=yield l(this,h,w).call(this,y,["--icsv","--ojson","head","-n","1",this.source]),t=yield l(this,S,E).call(this,e);if(t.code!==0)return null;if(t.stderr)throw new Error(t.stderr);let r=JSON.parse(t.stdout);return r.length===0?(this.shape.header=!1,null):(this.shape.columns=Object.keys(r[0]),this.shape.header=!0,this.shape.columns)})}preview(e,t){return p(this,null,function*(){let r,s=1024*1024*10,a=yield c.promises.stat(this.source);if(t&&t!==this.source&&c.createWriteStream(t)instanceof c.WriteStream||a.size>s){try{if(t===void 0)throw new Error("stream-destination-undefined");r=c.createWriteStream(t)}catch(m){throw new Error(`${t} is not writable`)}return(yield l(this,h,w).call(this,y,["--icsv","--ojson","head","-n",e.toString(),this.source])).stdout.pipe(r),console.warn(`\u{1F440} Preview saved to: ${t}`),t}let u=yield l(this,h,w).call(this,y,["--icsv","--ojson","head","-n",e.toString(),this.source]),i=yield l(this,S,E).call(this,u);if(i.stderr)throw new Error(i.stderr);if(i.code!==0)throw new Error("Error while executing mlr command");let d=JSON.parse(i.stdout);return this.shape.preview=d,this.shape.preview})}};S=new WeakSet,E=function(e){let t={stdout:"",stderr:"",code:0};return new Promise((r,s)=>{e.stdout.on("data",n=>{t.stdout+=n}),e.stderr.on("data",n=>{t.stderr+=n}),e.on("close",n=>{t.code=n===0?0:1,r(t)}),e.on("error",n=>{s(n)})})},h=new WeakSet,w=function(e,t){return this.processCount++,L(e,t)},P=new WeakSet,re=function(){return p(this,null,function*(){let e=this.source;if(!c.existsSync(e))throw new Error(`${e} does not exist, provide a valid path to a CSV file`);if(_.platform()==="win32")return;let t=l(this,h,w).call(this,"file",[e,"--mime-type"]);t.stdout.on("data",r=>{let s=r.toString().split(":")[1].trim();s==="text/csv"||s==="text/plain"?this.shape.type=s:this.shape.errors.incorrectType=`${e} is not a CSV file`}),t.stderr.on("error",r=>{console.warn(r)}),t.on("close",r=>{(r!==0||this.shape.type==="")&&console.warn("unable to use file() cmd")})})};var B=function(){let o;function e(){let t=k.join(process.cwd(),".muto-cache");return c.existsSync(t)?console.log("loading cache from",t):(console.log("creating cache file at",t),C(t,JSON.stringify({}))),{init:new Date,path:t,get:r=>{let s=g(t),n=JSON.parse(s.toString());if(n[r].source===r)return n[r]},set:(r,s)=>{let n=g(t),a=JSON.parse(n.toString());if(!a[r])return a[r]=s,C(t,JSON.stringify(a)),r},has:r=>{let s=g(t);return!!JSON.parse(s.toString())[r]},delete:r=>{let s=g(t),n=JSON.parse(s.toString());delete n[r],C(t,JSON.stringify(n))},clear:()=>{C(t,JSON.stringify({}))},size:()=>{let r=g(t),s=JSON.parse(r.toString());return Object.keys(s).length},keys:()=>{let r=g(t),s=JSON.parse(r.toString());return Object.keys(s)}}}return{getInstance:()=>(o||(o=e()),o)}}();var x,se,D,ne,I,oe,v,M,N,ie,j,ae,b,F,R=class{constructor(e){f(this,x);f(this,D);f(this,I);f(this,v);f(this,N);f(this,j);f(this,b);this.name=e,this.datasets=new Map,this.createdAt=new Date,this.env="local",this.lcache=B.getInstance()}list(){return Array.from(this.datasets.values())}remove(e){this.datasets.delete(e.source)}add(e,t){return p(this,null,function*(){if(t.destination===""&&console.warn(`destination-not-provided: provide a destination for ${e}`),this.lcache.has(e))return e;let r=new O(e,t),s=10;return yield Promise.all([r.columns(),r.preview(s),r.toJson()]),console.log(r),this.datasets.set(e,r),this.lcache.set(e,r),e})}};x=new WeakSet,se=function(e){let{data:t,err:r}=l(this,b,F).call(this,e,{file:!0});if(r||!t.file)return console.error(`Invalid S3 URI: ${e}, URI must point to a file`),!1;let s=l(this,v,M).call(this,{credentials:J("default"),region:"us-east-2"}),n=new U({Bucket:t.bucket,Key:t.file});return s.send(n).then(a=>a.$metadata.httpStatusCode===200&&a.ContentType==="text/csv").catch(a=>(console.error(a),!1)),!1},D=new WeakSet,ne=function(e){if(e.startsWith("/")||e.startsWith("../")||e.startsWith("./"))return"local";if(e.startsWith("s3://"))return"s3";throw new Error(`invalid-source-type: ${e}`)},I=new WeakSet,oe=function(e){return c.createReadStream(e)},v=new WeakSet,M=function(e){return e.region||(e.region="us-east-2"),new $(e)},N=new WeakSet,ie=function(e){let t=1024*1024*50;if(!c.existsSync(e))throw new Error(`path-doesnt-exists: ${e} ,provide a valid path to a CSV file`);if(c.statSync(e).size>t)throw new Error(`file-size-exceeds-limit: ${e} is too large, please limit to 50MB`);return c.statSync(e).size},j=new WeakSet,ae=function(e,t,r){return new Promise((s,n)=>{try{let a=l(this,v,M).call(this,{credentials:J("default"),region:"us-east-2"});if(!(a instanceof $))throw new Error(`invalid-operation: Invalid operation for ${e.source}`);let u=new z({Bucket:t,ContentEncoding:"utf8",ContentType:"text/csv",Key:r});a.send(u).then(i=>{i.UploadId&&s(i.UploadId),n(new Error("noop"))}).catch(i=>{n(i)}).finally(()=>{console.log("init multipart upload")})}catch(a){n(a)}})},b=new WeakSet,F=function(e,t){let r={file:t&&t.file?t.file:!1};if(!e.startsWith("s3://")||e.split(":/")[0]!=="s3")throw new Error(`invalid-s3-uri: ${e}`);let s="",n={bucket:"",key:"",file:""},a=e.split(":/")[1],[u,...i]=a.split("/").splice(1);return n.bucket=u,n.key=i.join("/"),i.forEach((d,W)=>{if(W===i.length-1){let m=d.split(".").length;if(r.file&&m===1&&(s=`uri should be a given, given: ${e}`),!r.file&&m===1)return;if(!r.file&&m>1){s=`Invalid S3 uri, ${e} should not end with a file name`;return}!r.file&&d.split(".")[1]!==""&&m>1&&(s=`${e} should not be a file endpoint: ${d}`),m>1&&d.split(".")[1]!==""&&(n.file=d)}}),{data:n,err:s}};function q(o){return new R(o)}function V(o,e){return new O(o,e)}export{V as createDataset,q as createWorkflow};
//# sourceMappingURL=muto.js.map
