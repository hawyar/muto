var W=Object.create;var v=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var C=s=>v(s,"__esModule",{value:!0});var _=(s,t)=>{for(var e in t)v(s,e,{get:t[e],enumerable:!0})},$=(s,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of A(t))!T.call(s,i)&&(e||i!=="default")&&v(s,i,{get:()=>t[i],enumerable:!(r=k(t,i))||r.enumerable});return s},y=(s,t)=>$(C(v(s!=null?W(I(s)):{},"default",!t&&s&&s.__esModule?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s),z=(s=>(t,e)=>s&&s.get(t)||(e=$(C({}),t,1),s&&s.set(t,e),e))(typeof WeakMap!="undefined"?new WeakMap:0);var h=(s,t,e)=>new Promise((r,i)=>{var n=o=>{try{c(e.next(o))}catch(l){i(l)}},a=o=>{try{c(e.throw(o))}catch(l){i(l)}},c=o=>o.done?r(o.value):Promise.resolve(o.value).then(n,a);c((e=e.apply(s,t)).next())});var V={};_(V,{createCatalog:()=>q,createWorkflow:()=>U});var u=y(require("fs"),1),x=require("child_process"),P=y(require("os"),1),g=y(require("path"),1),b=require("vfile"),O=require("pgsql-parser"),R=require("readline"),p=require("@aws-sdk/client-s3"),N=require("@aws-sdk/credential-providers"),M=(a=>(a.COMMA=",",a.TAB="	",a.SPACE=" ",a.PIPE="|",a.SEMICOLON=";",a.COLON=":",a))(M||{});const w=(0,g.join)(process.cwd(),"node_modules",".bin","mlr@v6.0.0");function L(s){var n,a,c;const e=(0,O.parse)(s)[0].RawStmt.stmt.SelectStmt,r={type:"select",distinct:!1,columns:[],from:[],sort:{},where:{},group:[],having:[],order:[],limit:{type:"",val:""}},i=e.limitOption;if(i==="LIMIT_OPTION_DEFAULT"&&(r.limit={type:e.limitOption,val:""}),i==="LIMIT_OPTION_COUNT"&&e.limitCount!==""&&(r.limit={type:e.limitOption,val:e.limitCount.A_Const.val.Integer.ival}),e.distinctClause!==void 0&&(r.distinct=!0),e.targetList!==void 0&&(r.columns=e.targetList.map(o=>{const l=o.ResTarget.val.ColumnRef.fields[0];return l.A_Star!==void 0?{name:"*"}:o.ResTarget.name!==void 0?{as:o.ResTarget.name,name:l.String.str}:{name:l.String.str}})),r.from=e.fromClause.map(o=>{const l={schemaname:"",relname:"",inh:""},d=o.RangeVar;return d.schemaname!==void 0&&(l.schemaname=d.schemaname),d.relname!==void 0&&(l.relname=d.relname),d.inh!==void 0&&(l.inh=d.inh),l}),e.whereClause!==void 0){if(e.whereClause!==null&&((n=e==null?void 0:e.whereClause)==null?void 0:n.A_Expr.kind)==="AEXPR_OP"){const o=e.whereClause.A_Expr,l={operator:"",left:{},right:{}};l.operator=o.name[0].String.str,o.lexpr!==null&&(l.left=o.lexpr.ColumnRef.fields[0].String.str),o.rexpr!==null&&(l.right=o.rexpr.ColumnRef.fields[0].String.str),r.where=l}if(((a=e==null?void 0:e.whereClause)==null?void 0:a.A_Expr)!==null&&((c=e==null?void 0:e.whereClause)==null?void 0:c.A_Expr.kind)==="AEXPR_IN"){const o=e.whereClause.A_Expr;console.log(o)}if(e.whereClause.BoolExpr!==null){if(e.whereClause.BoolExpr.boolop==="AND_EXPR"){const o=e.whereClause.BoolExpr.args;console.log(JSON.stringify(o,null,2))}if(e.whereClause.BoolExpr.boolop==="OR_EXPR"){const o=e.whereClause.BoolExpr.args;console.log(JSON.stringify(o,null,2))}}}return r}const E=s=>(0,N.fromIni)({profile:s,mfaCodeProvider:t=>h(void 0,null,function*(){return t})});function S(s){return new p.S3Client(s)}function j(s,t){const e={file:t.file?t.file:!1};if(!s.startsWith("s3://")||s.split(":/")[0]!=="s3")throw new Error(`invalid-s3-uri: ${s}`);let r="";const i={bucket:"",key:"",file:""},n=s.split(":/")[1],[a,...c]=n.split("/").splice(1);return i.bucket=a,i.key=c.join("/"),c.forEach((o,l)=>{if(l===c.length-1){const d=o.split(".").length;if(e.file&&d===1&&(r=`uri should be a given, given: ${s}`),!e.file&&d===1)return;if(!e.file&&d>1){r=`Invalid S3 uri, ${s} should not end with a file name`;return}!e.file&&o.split(".")[1]!==""&&d>1&&(r=`${s} should not be a file endpoint: ${o}`),d>1&&o.split(".")[1]!==""&&(i.file=o)}}),{data:i,err:r}}class B{constructor(t,e){this.name=e.name!==""?e.name:g.default.basename(t),this.source=t,this.options=e,this.destination=e.destination,this.env="local",this.init=new Date,this.state="init",this.pcount=0,this.vfile=new b.VFile({path:this.source}),this.connector=null,this.loader=null,this.stmt={type:"",distinct:!1,columns:[],from:[],sort:[],where:{},group:[],having:[],limit:{type:"",val:""}}}toJson(){return h(this,null,function*(){const t=this.exec(w,["--icsv","--ojson","clean-whitespace",this.source]);if(!t.stdout)throw new Error(`failed to convert ${this.source} from CSV to JSON`);return t})}toCSV(){return h(this,null,function*(){const t=this.exec(w,["--icsv","--ocsv","cat",this.source]);if(!t.stdout)throw new Error(`failed to convert ${this.source} from JSON to CSV`);return t})}rowCount(){return h(this,null,function*(){const t=yield this.exec(w,["--ojson","count",this.source]),e=yield this.promisifyProcessResult(t);if(e.code!==0)throw new Error(`Error while counting rows: ${e.stderr}`);if(e.stderr)throw new Error(e.stderr);const r=JSON.parse(e.stdout);if(r.length===0)throw new Error("No rows found");return r[0].count})}getColumnHeader(){return h(this,null,function*(){const t=yield this.exec(w,["--icsv","--ojson","head","-n","1",this.source]),e=yield this.promisifyProcessResult(t);if(e.code!==0)throw new Error(`Error while getting column header: ${e.stderr}`);const r=JSON.parse(e.stdout);if(r.length===0)throw new Error("No columns found");const i=Object.keys(r[0]);this.vfile.data.columns=i})}preview(t=20,e){return h(this,null,function*(){let r;if(e===void 0)throw new Error("stream-destination-undefined");if(e!==null&&e!==this.source&&u.default.createWriteStream(e)instanceof u.default.WriteStream)return r=u.default.createWriteStream(e),(yield this.exec(w,["--icsv","--ojson","head","-n",t.toString(),this.source])).stdout.pipe(r),console.warn(`preview saved to: ${e}`),e;const i=yield this.exec(w,["--icsv","--ojson","head","-n",t.toString(),this.source]),n=yield this.promisifyProcessResult(i);if(n.stderr)throw new Error(n.stderr);if(n.code!==0)throw new Error("Error while executing mlr command");return this.vfile.data.preview=JSON.parse(n.stdout),JSON.parse(n.stdout)})}detectShape(){return h(this,null,function*(){const t=this.source,e={type:"",size:0,columns:[],header:!1,encoding:"utf-8",bom:!1,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{},preview:[]};if(!u.default.existsSync(t))throw new Error(`path-doesnt-exists: ${t} ,provide a valid path to a CSV file`);if(e.size=u.default.statSync(t).size,e.size>1024*1024*1024)throw new Error(`file-size-exceeds-limit: ${t} is too large, please limit to under 1GB for now`);if(!u.default.existsSync(t))throw new Error(`${t} does not exist, provide a valid path to a CSV file`);if(P.default.platform()==="win32")throw new Error("scream");const r=this.exec("file",[t,"--mime-type"]),i=yield this.promisifyProcessResult(r);if(i.stderr)throw new Error(`failed-to-detect-mime-type: ${i.stderr}`);if(i.code!==0)throw new Error(`failed-to-detect-mime-type: ${i.stderr}`);e.type=i.stdout.split(":")[1].trim();const n=(0,R.createInterface)({input:u.default.createReadStream(t),crlfDelay:1/0});let a=0;const c=20,o={row:[""],del:""};let l="";const d=[",",";","	","|",":"," ","|"];n.on("line",m=>{if(a===0&&(d.forEach(f=>{m.split(f).length>1&&(o.row=m.split(f),o.del=f)}),(o.del===""||o.row.length<=1)&&(e.errors.unrecognizedDelimiter=`${t} does not have a recognized delimiter`,e.header=!1),o.row.forEach(f=>{isNaN(parseInt(f.substring(0,3)))||(e.header=!1,e.warnings.noHeader="no header found",a++)}),e.header=!0,e.delimiter=o.del,e.columns=o.row),a>0&&a<c){const f=m.split('"').length-1;if(l&&f%2!==0&&(e.spanMultipleLines=!0),f%2!==0&&m.split('""').length-1!==1&&(l=m),m.split(o.del).length!==o.row.length){e.errors.rowWidthMismatch="row width mismatch";return}e.preview.push(m.split(o.del))}a++}),n.on("close",()=>{this.vfile.data.shape=e})})}determineLoader(){if(this.destination.startsWith("s3://")){this.loader=S({credentials:E("default"),region:"us-east-2"});return}(this.source.startsWith("/")||this.source.startsWith("../")||this.source.startsWith("./"))&&(this.loader=u.default.createReadStream(this.source))}determineConnector(){switch(this.env){case"local":if(!u.default.existsSync(this.source))throw new Error(`file: ${this.source} not found, please provide a valid file path`);this.connector=u.default.createReadStream(this.source);break;case"aws":this.connector=S({credentials:E("default"),region:"us-east-2"});break;default:throw new Error(`unsupported-source for: ${this.source}`)}}determineEnv(){if(this.vfile.data.source=this.source,this.source.startsWith("/")||this.source.startsWith("../")||this.source.startsWith("./")){this.env="local";return}if(this.source.startsWith("s3://")){this.env="aws";return}throw new Error(`invalid-source-type: ${this.source}`)}fileSize(){const t=1024*1024*50;if(!u.default.existsSync(this.source))throw new Error(`path-doesnt-exists: ${this.source} ,provide a valid path to a CSV file`);const e=u.default.statSync(this.source);if(e.size>t)throw new Error(`file-size-exceeds-limit: ${this.source} is too large, please limit to 50MB`);return e.size}uploadToS3(){return h(this,null,function*(){if(this.source==="")throw new Error("source not definded");if(this.destination==="")throw new Error("destination not definded");const t=u.default.createReadStream(this.source);if(!t.readable)throw new Error("failed-to-read-source: Make sure the provided file is readable");const e=this.fileSize();e>100*1024*1024&&console.warn(`file size ${e} is larger`);const{data:r,err:i}=j(this.destination,{file:!0});if(i.toString().startsWith("invalid-s3-uri"))throw new Error(`failed-to-parse-s3-uri: ${i}`);r.file===""&&(r.file=g.default.basename(this.source),console.warn("Destination filename not provided. Using source source basename"+r.file)),console.log(`uploading ${this.source} to ${this.destination}`);const a=yield S({region:"us-east-2"}).send(new p.PutObjectCommand({Bucket:r.bucket,Key:r.key+r.file,Body:t})).catch(c=>{throw new Error(`failed-upload-s3: Error while uploading to S3: ${c}`)}).finally(()=>{t.close()});if(a.$metadata.httpStatusCode!==200)throw new Error(`failed-upload-s3: Error while uploading to S3: ${a.$metadata.httpStatusCode}`);if(!a.$metadata.requestId)throw new Error(`failed-upload-s3: Error while uploading to S3: ${a.$metadata.httpStatusCode}`);return a.$metadata.requestId})}initMultipartUpload(t,e){return h(this,null,function*(){const r=S({credentials:E("default"),region:"us-east-2"}),i=new p.CreateMultipartUploadCommand({Bucket:t,ContentEncoding:"utf8",ContentType:"text/csv",Key:e}),n=yield r.send(i);if(n.$metadata.httpStatusCode!==200)throw new Error(`failed-multipart-upload: Error while creating multipart upload: ${n.UploadId} with status code ${n.$metadata.httpStatusCode}`);if(!n.UploadId)throw new Error(`failed-multipart-upload: Error while creating multipart upload: ${n.UploadId}`);return n.UploadId})}exec(t,e){if(console.log(`exec: ${t} ${e.join(" ")}`),this.pcount>5)throw new Error(`too-many-processes: ${this.pcount}`);return this.pcount++,(0,x.spawn)(t,e,{})}promisifyProcessResult(t){return h(this,null,function*(){const e={stdout:"",stderr:"",code:0};return yield new Promise((r,i)=>{t.stdout.on("data",n=>{e.stdout+=n}),t.on("close",n=>{e.code=n===0?0:1,r(e)}),t.on("error",n=>{i(n)})})})}}function q(s,t){return h(this,null,function*(){return yield new Promise((e,r)=>{s===""&&r(new Error("failed-to-create-dataset: source is required")),t.destination===""&&r(new Error("failed-to-create-dataset: destination is required")),s.endsWith(".csv")||r(new Error(`failed to create dataset: ${s}, source must be a csv file`));const i=new B(s,t);Promise.all([i.determineEnv(),i.detectShape(),i.determineConnector(),i.determineLoader()]).then(()=>{console.log(`created catalog for ${s}`),e(i)}).catch(n=>r(n))})})}class J{constructor(t){this.name=t,this.catalogs=new Map,this.createdAt=new Date,this.env="local",this.stmt=""}list(){return Array.from(this.catalogs.values())}remove(t){this.catalogs.delete(t.source)}get(t){if(this.catalogs.get(t)!=null)return this.catalogs.get(t)}add(t){if(Array.isArray(t)){if(t.length===1&&t[0].name!==""){const e=t[0];if(this.catalogs.has(e.name))throw new Error(`duplicate-dataset: ${e.name}`);return this.catalogs.set(e.name,e),e.name}return t.forEach(e=>{if(this.catalogs.has(e.name))throw new Error(`duplicate-dataset: ${e.name}`);console.log(`added ${e.name} to the workflow`),this.catalogs.set(e.name,e)}),t.map(e=>e.name)}if(this.catalogs.has(t.name))throw new Error(`duplicate-dataset: ${t.name}`);return this.catalogs.set(t.name,t),console.log(`added ${t.name} to the workflow`),t.name}query(t){return h(this,null,function*(){const e=L(t);console.log(e);let r="";if(e.from.length===1&&(r=e.from[0].relname),!this.catalogs.has(r))throw new Error(`unknown-catalog: ${r}`);const i=this.catalogs.get(r);if(i==null)throw new Error(`catalog-not-found: ${r}`);console.log(`querying catalog: ${i.name}`),e.columns[0].name==="*"&&console.log("columns: *"),e.columns.length>1&&console.log("columns: ",e.columns.map(n=>n.name).join(", ")),console.log(JSON.stringify(e,null,2))})}}function U(s){return console.log(`created workflow: ${s}`),new J(s)}module.exports=z(V);0&&(module.exports={createCatalog,createWorkflow});
