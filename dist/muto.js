var N=Object.create;var S=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var $=s=>S(s,"__esModule",{value:!0});var A=(s,t)=>{for(var e in t)S(s,e,{get:t[e],enumerable:!0})},P=(s,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of M(t))!R.call(s,i)&&(e||i!=="default")&&S(s,i,{get:()=>t[i],enumerable:!(r=z(t,i))||r.enumerable});return s},y=(s,t)=>P($(S(s!=null?N(L(s)):{},"default",!t&&s&&s.__esModule?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s),j=(s=>(t,e)=>s&&s.get(t)||(e=P($({}),t,1),s&&s.set(t,e),e))(typeof WeakMap!="undefined"?new WeakMap:0);var d=(s,t,e)=>new Promise((r,i)=>{var n=o=>{try{c(e.next(o))}catch(u){i(u)}},a=o=>{try{c(e.throw(o))}catch(u){i(u)}},c=o=>o.done?r(o.value):Promise.resolve(o.value).then(n,a);c((e=e.apply(s,t)).next())});var _={};A(_,{createCatalog:()=>B,createWorkflow:()=>T});var l=y(require("fs"),1),b=require("child_process"),x=y(require("os"),1),g=y(require("path"),1),O=require("vfile"),W=require("pgsql-parser"),k=require("readline"),w=require("@aws-sdk/client-s3"),I=require("@aws-sdk/credential-providers"),U=(a=>(a.COMMA=",",a.TAB="	",a.SPACE=" ",a.PIPE="|",a.SEMICOLON=";",a.COLON=":",a))(U||{});const m=(0,g.join)(process.cwd(),"node_modules",".bin","mlr@v6.0.0"),C=s=>(0,I.fromIni)({profile:s,mfaCodeProvider:t=>d(void 0,null,function*(){return t})});let E;function v(s){return E||(console.log("setting up s3 client"),E=new w.S3Client(s)),E}function q(s,t){const e={file:t&&t.file?t.file:!1};if(!s.startsWith("s3://")||s.split(":/")[0]!=="s3")throw new Error(`invalid-s3-uri: ${s}`);let r="";const i={bucket:"",key:"",file:""},n=s.split(":/")[1],[a,...c]=n.split("/").splice(1);return i.bucket=a,i.key=c.join("/"),c.forEach((o,u)=>{if(u===c.length-1){const f=o.split(".").length;if(e.file&&f===1&&(r=`uri should be a given, given: ${s}`),!e.file&&f===1)return;if(!e.file&&f>1){r=`Invalid S3 uri, ${s} should not end with a file name`;return}!e.file&&o.split(".")[1]!==""&&f>1&&(r=`${s} should not be a file endpoint: ${o}`),f>1&&o.split(".")[1]!==""&&(i.file=o)}}),{data:i,err:r}}var J=(t=>(t[t.LIMIT_OPTION_DEFAUL=0]="LIMIT_OPTION_DEFAUL",t))(J||{});class V{constructor(t,e){this.name=e&&e.name?e.name:g.default.basename(t),this.source=t,this.options=e,this.destination=e.destination,this.env="local",this.init=new Date,this.state="init",this.pcount=0,this.vfile=new O.VFile({path:this.source}),this.stmt={raw:"",selectStmt:{distinctClause:[],targetList:[],fromClause:[],whereClause:[],limitOption:0}}}toJson(){return d(this,null,function*(){const t=this.exec(m,["--icsv","--ojson","clean-whitespace",this.source]);if(!t.stdout)throw new Error(`failed to convert ${this.source} from CSV to JSON`);return t})}toCSV(){return d(this,null,function*(){const t=this.exec(m,["--icsv","--ocsv","cat",this.source]);if(!t.stdout)throw new Error(`failed to convert ${this.source} from JSON to CSV`);return t})}rowCount(){return d(this,null,function*(){const t=yield this.exec(m,["--ojson","count",this.source]),e=yield this.promisifyProcessResult(t);if(e.code!==0)throw new Error(`Error while counting rows: ${e.stderr}`);if(e.stderr)throw new Error(e.stderr);const r=JSON.parse(e.stdout);if(r.length===0)throw new Error("No rows found");return r[0].count})}getColumnHeader(){return d(this,null,function*(){const t=yield this.exec(m,["--icsv","--ojson","head","-n","1",this.source]),e=yield this.promisifyProcessResult(t);if(e.code!==0)return null;if(e.stderr)throw new Error(e.stderr);const r=JSON.parse(e.stdout);if(r.length===0)return null;const i=Object.keys(r[0]);return this.vfile.data.columns=i,i})}preview(t=20,e){return d(this,null,function*(){let r;const i=1024*1024*10,a=yield l.default.promises.stat(this.source);if(e&&e!==this.source&&l.default.createWriteStream(e)instanceof l.default.WriteStream||a.size>i){if(e===void 0)throw new Error("stream-destination-undefined");return r=l.default.createWriteStream(e),(yield this.exec(m,["--icsv","--ojson","head","-n",t.toString(),this.source])).stdout.pipe(r),console.warn(`\u{1F440} Preview saved to: ${e}`),e}const c=yield this.exec(m,["--icsv","--ojson","head","-n",t.toString(),this.source]),o=yield this.promisifyProcessResult(c);if(o.stderr)throw new Error(o.stderr);if(o.code!==0)throw new Error("Error while executing mlr command");return this.vfile.data.preview=JSON.parse(o.stdout),JSON.parse(o.stdout)})}detectShape(){return d(this,null,function*(){const t=this.source,e={type:"",size:0,columns:[],header:!1,encoding:"utf-8",bom:!1,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{},preview:[]};if(!l.default.existsSync(t))throw new Error(`path-doesnt-exists: ${t} ,provide a valid path to a CSV file`);if(e.size=l.default.statSync(t).size,e.size>1024*1024*1024)throw new Error(`file-size-exceeds-limit: ${t} is too large, please limit to under 1GB for now`);if(!l.default.existsSync(t))throw new Error(`${t} does not exist, provide a valid path to a CSV file`);if(x.default.platform()==="win32")throw new Error("scream");const r=this.exec("file",[t,"--mime-type"]),i=yield this.promisifyProcessResult(r);if(i.stderr)throw new Error(`failed-to-detect-mime-type: ${i.stderr}`);if(i.code!==0)throw new Error(`failed-to-detect-mime-type: ${i.stderr}`);e.type=i.stdout.split(":")[1].trim();const n=(0,k.createInterface)({input:l.default.createReadStream(t),crlfDelay:1/0});let a=0;const c=20,o={row:[""],del:""};let u="";const f=[",",";","	","|",":"," ","|"];n.on("line",p=>{if(a===0&&(f.forEach(h=>{p.split(h).length>1&&(o.row=p.split(h),o.del=h)}),(o.del===""||o.row.length<=1)&&(e.errors.unrecognizedDelimiter=`${t} does not have a recognized delimiter`,e.header=!1),o.row.forEach(h=>{if(!isNaN(parseInt(h.substring(0,3)))){e.header=!1,e.warnings.noHeader="no header found",a++;return}}),e.header=!0,e.delimiter=o.del,e.columns=o.row),a>0&&a<c){const h=p.split('"').length-1;if(u&&h%2!==0&&(e.spanMultipleLines=!0),h%2!==0&&p.split('""').length-1!==1&&(u=p),p.split(o.del).length!==o.row.length){e.errors.rowWidthMismatch="row width mismatch";return}e.preview.push(p.split(o.del))}a++}),n.on("close",()=>{this.vfile.data.shape=e})})}determineLoader(){if(this.destination.startsWith("s3://")){this.vfile.data.loader=v({credentials:C("default"),region:"us-east-2"});return}if(this.source.startsWith("/")||this.source.startsWith("../")||this.source.startsWith("./")){this.vfile.data.loader=l.default.createReadStream(this.source);return}}determineConnector(){switch(this.env){case"local":if(!l.default.existsSync(this.source))throw new Error(`file: ${this.source} not found, please provide a valid file path`);this.vfile.data.connector=l.default.createReadStream(this.source);break;case"aws":this.vfile.data.connector=v({credentials:C("default"),region:"us-east-2"});break;default:throw new Error(`unsupported-source for: ${this.source}`)}}determineEnv(){if(this.vfile.data.source=this.source,this.source.startsWith("/")||this.source.startsWith("../")||this.source.startsWith("./")){this.env="local";return}if(this.source.startsWith("s3://")){this.env="aws";return}throw new Error(`invalid-source-type: ${this.source}`)}fileSize(){const t=1024*1024*50;if(!l.default.existsSync(this.source))throw new Error(`path-doesnt-exists: ${this.source} ,provide a valid path to a CSV file`);const e=l.default.statSync(this.source);if(e.size>t)throw new Error(`file-size-exceeds-limit: ${this.source} is too large, please limit to 50MB`);return e.size}uploadToS3(){return d(this,null,function*(){if(!this.source||!this.destination)throw new Error("source or destination not set. Both must be defined to upload to S3");const t=l.default.createReadStream(this.source);if(!t.readable)throw new Error("failed-to-read-source: Make sure the provided file is readable");const e=this.fileSize();e>100*1024*1024&&console.warn(`file size ${e} is larger`);const{data:r,err:i}=q(this.destination,{file:!0});if(i.toString().startsWith("invalid-s3-uri"))throw new Error(`failed-to-parse-s3-uri: ${i}`);r.file||(r.file=g.default.basename(this.source),console.warn("Destination filename not provided. Using source source basename"+r.file)),console.log(`uploading ${this.source} to ${this.destination}`);const a=yield v({region:"us-east-2"}).send(new w.PutObjectCommand({Bucket:r.bucket,Key:r.key+r.file,Body:t})).catch(c=>{throw new Error(`failed-upload-s3: Error while uploading to S3: ${c}`)}).finally(()=>{t.close()});if(a.$metadata.httpStatusCode!==200)throw new Error(`failed-upload-s3: Error while uploading to S3: ${a.$metadata.httpStatusCode}`);if(!a.$metadata.requestId)throw new Error(`failed-upload-s3: Error while uploading to S3: ${a.$metadata.httpStatusCode}`);return a.$metadata.requestId})}initMultipartUpload(t,e){return d(this,null,function*(){const r=v({credentials:C("default"),region:"us-east-2"}),i=new w.CreateMultipartUploadCommand({Bucket:t,ContentEncoding:"utf8",ContentType:"text/csv",Key:e}),n=yield r.send(i);if(n.$metadata.httpStatusCode!==200)throw new Error(`failed-multipart-upload: Error while creating multipart upload: ${n.UploadId} with status code ${n.$metadata.httpStatusCode}`);if(!n.UploadId)throw new Error(`failed-multipart-upload: Error while creating multipart upload: ${n.UploadId}`);return n.UploadId})}exec(t,e){if(console.log(`exec: ${t} ${e.join(" ")}`),this.pcount>5)throw new Error(`too-many-processes: ${this.pcount}`);return this.pcount++,(0,b.spawn)(t,e,{})}promisifyProcessResult(t){const e={stdout:"",stderr:"",code:0};return new Promise((r,i)=>{t.stdout.on("data",n=>{e.stdout+=n}),t.stderr.on("data",n=>{e.stderr+=n}),t.on("close",n=>{e.code=n===0?0:1,r(e)}),t.on("error",n=>{i(n)})})}parseSql(t){const e=(0,W.parse)(t);l.default.writeFileSync("tmpp.json",JSON.stringify(e,null,2))}}function B(s,t){return d(this,null,function*(){return new Promise((e,r)=>{s||r(new Error("failed-to-create-dataset: source is required")),(!t||!t.destination)&&r(new Error("failed-to-create-dataset: destination is required")),s.endsWith(".csv")||r(new Error(`failed to create dataset: ${s}, source must be a csv file`));const i=new V(s,t);Promise.all([i.determineEnv(),i.detectShape(),i.determineConnector(),i.determineLoader()]).then(()=>{console.log(`created catalog for ${s}`),e(i)}).catch(n=>r(n))})})}class F{constructor(t){this.name=t,this.catalogs=new Map,this.createdAt=new Date,this.env="local",this.stmt=""}list(){return Array.from(this.catalogs.values())}remove(t){this.catalogs.delete(t.source)}get(t){return this.catalogs.get(t)||null}add(t){if(Array.isArray(t)){if(t.length===1&&t[0].source){const r=t[0];if(this.catalogs.has(r.source))throw new Error(`duplicate-dataset: ${r.source}`);return this.catalogs.set(r.source,r),r.source}const e=new Set;return t.forEach(r=>{if(this.catalogs.has(r.source))throw new Error(`duplicate-dataset: ${r.source}`);console.log(`added ${r.source} to the workflow`),this.catalogs.set(r.source,r),e.add(r.source)}),Array.from(e)}if(this.catalogs.has(t.source))throw new Error(`duplicate-dataset: ${t.source}`);return this.catalogs.set(t.source,t),console.log(`added ${t.source} to the workflow`),t.source}}function T(s){return new F(s)}module.exports=j(_);0&&(module.exports={createCatalog,createWorkflow});
