var R=Object.create;var p=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var $=n=>p(n,"__esModule",{value:!0});var W=(n,e)=>{for(var t in e)p(n,t,{get:e[t],enumerable:!0})},b=(n,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of I(e))!N.call(n,o)&&(t||o!=="default")&&p(n,o,{get:()=>e[o],enumerable:!(r=A(e,o))||r.enumerable});return n},E=(n,e)=>b($(p(n!=null?R(T(n)):{},"default",!e&&n&&n.__esModule?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n),_=(n=>(e,t)=>n&&n.get(e)||(t=b($({}),e,1),n&&n.set(e,t),t))(typeof WeakMap!="undefined"?new WeakMap:0);var u=(n,e,t)=>new Promise((r,o)=>{var l=i=>{try{d(t.next(i))}catch(a){o(a)}},s=i=>{try{d(t.throw(i))}catch(a){o(a)}},d=i=>i.done?r(i.value):Promise.resolve(i.value).then(l,s);d((t=t.apply(n,e)).next())});var D={};W(D,{createCatalog:()=>L,createWorkflow:()=>J});var m=E(require("fs"),1),v=require("child_process"),C=E(require("os"),1),f=E(require("path"),1),P=require("vfile"),O=require("pgsql-parser"),x=require("readline"),h=require("@aws-sdk/client-s3"),k=require("@aws-sdk/credential-providers");const g=(0,f.join)(process.cwd(),"node_modules","muto","node_modules",".bin","mlr@v6.0.0");var z=(s=>(s.COMMA=",",s.TAB="	",s.SPACE=" ",s.PIPE="|",s.SEMICOLON=";",s.COLON=":",s))(z||{});const S=n=>(0,k.fromIni)({profile:n,mfaCodeProvider:e=>u(void 0,null,function*(){return e})});function w(n){return new h.S3Client(n)}function q(n,e){const t={file:e.file?e.file:!1};if(!n.startsWith("s3://")||n.split(":/")[0]!=="s3")throw new Error(`invalid-s3-uri: ${n}`);let r="";const o={bucket:"",key:"",file:""},l=n.split(":/")[1],[s,...d]=l.split("/").splice(1);return o.bucket=s,o.key=d.join("/"),d.forEach((i,a)=>{if(a===d.length-1){const c=i.split(".").length;if(t.file&&c===1&&(r=`uri should be a given, given: ${n}`),!t.file&&c===1)return;if(!t.file&&c>1){r=`Invalid S3 uri, ${n} should not end with a file name`;return}!t.file&&i.split(".")[1]!==""&&c>1&&(r=`${n} should not be a file endpoint: ${i}`),c>1&&i.split(".")[1]!==""&&(o.file=i)}}),{data:o,err:r}}function y(n,e){return u(this,null,function*(){console.log(`${n} ${e.join(" ")}`);const t=(0,v.spawn)(n,e),r={stdout:"",stderr:"",code:0};return yield new Promise((o,l)=>{t.stdout.on("data",s=>{r.stdout+=s}),t.stderr.on("data",s=>{throw new Error(s.toString())}),t.on("close",s=>{r.code=s===0?0:1,o(r)}),t.on("error",s=>{console.log(JSON.stringify(s)),l(s)})})})}class M{constructor(e){this.name=e.name!==""?e.name:f.default.basename(e.source),this.options=e,this.env="local",this.init=new Date,this.state="init",this.pcount=0,this.columns=[],this.connector=null,this.loader=null,this.vfile=new P.VFile({path:this.options.source}),this.stmt={type:"",distinct:!1,columns:[{name:"",type:""}],from:[{schemaname:"",relname:"",inh:""}],sort:[],where:{},group:[],orderBy:[],having:[],limit:{type:"",val:""}}}rowCount(){return u(this,null,function*(){const e=yield y(g,["--ojson","count",this.options.source]);if(e.code!==0)throw new Error(`Error while counting rows: ${e.stderr}`);if(e.stderr!=="")throw new Error(e.stderr);const t=JSON.parse(e.stdout);if(t.length===0)throw new Error("Error while counting rows");if(t[0].count===void 0)throw new Error("Error while counting rows");return t[0].count})}headerColumn(){return u(this,null,function*(){const e=yield y(g,["--icsv","--ojson","head","-n","1",this.options.source]);if(e.code!==0)throw new Error(`Error while getting column header: ${e.stderr}`);const t=JSON.parse(e.stdout);if(t.length===0)throw new Error("No columns found");this.columns=Object.keys(t[0])})}preview(e=20,t){return u(this,null,function*(){if(t===void 0)throw new Error("stream-destination-undefined");const r=yield y(g,["--icsv","--ojson","head","-n",e.toString(),this.options.source]);if(r.stderr!=="")throw new Error(r.stderr);if(r.code!==0)throw new Error("Error while executing mlr command");return this.vfile.data.preview=JSON.parse(r.stdout),JSON.parse(r.stdout)})}fileType(){return u(this,null,function*(){if(C.default.platform()!=="linux"&&C.default.platform()!=="darwin")throw new Error("scream");const e=yield y("file",[this.options.source,"--mime-type"]);if(e.stderr!=="")throw new Error(`failed-to-detect-mime-type: ${e.stderr}`);if(e.code!==0)throw new Error(`failed-to-detect-mime-type: ${e.stderr}`);const t=e.stdout.split(":")[1].trim();if(t==="")throw new Error("failed-to-detect-mime-type");return t})}determineShape(){return u(this,null,function*(){const e=this.options.source,t={type:"",size:0,columns:[],header:!1,encoding:"utf-8",bom:!1,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{},preview:[]};t.size=yield this.fileSize(),t.type=yield this.fileType();const r=(0,x.createInterface)({input:m.default.createReadStream(e),crlfDelay:1/0});let o=0;const l=10,s={row:[""],del:""};let d="";const i=[",",";","	","|",":"," ","|"];r.on("line",a=>{if(o===0&&(i.forEach(c=>{a.split(c).length>1&&(s.row=a.split(c),s.del=c)}),(s.del===""||s.row.length<=1)&&(t.errors.unrecognizedDelimiter=`${e} does not have a recognized delimiter`,t.header=!1),s.row.forEach(c=>{isNaN(parseInt(c.substring(0,3)))||(t.header=!1,t.warnings.noHeader="no header found",o++)}),t.header=!0,t.delimiter=s.del,t.columns=s.row),o>0&&o<l+1){const c=a.split('"').length-1;if(d!==""&&c%2!==0&&(t.spanMultipleLines=!0),console.log(c),console.log(a.split('"')),c%2!==0&&a.split('""').length-1!==1&&(d=a),a.split(s.del).length!==s.row.length){t.errors.rowWidthMismatch="row width mismatch";return}t.preview.push(a.split(s.del))}o++}),r.on("close",()=>{this.vfile.data.shape=t})})}determineLoader(){if(this.options.destination.startsWith("s3://")){this.loader=w({credentials:S("default"),region:"us-east-2"});return}if(this.options.source.startsWith("/")||this.options.source.startsWith("../")||this.options.source.startsWith("./")){this.loader=m.default.createReadStream(this.options.source);return}throw new Error("unsupported-loader")}determineConnector(){switch(this.env){case"local":if(!m.default.existsSync(this.options.source))throw new Error(`file: ${this.options.source} not found, please provide a valid file path`);this.connector=m.default.createWriteStream(this.options.destination);break;case"aws":this.connector=w({credentials:S("default"),region:"us-east-2"});break;default:throw new Error(`unsupported-source for: ${this.options.source}`)}}determineEnv(){const e=this.options.source;if(e.startsWith("/")||e.startsWith("../")||e.startsWith("./")){this.env="local";return}if(e.startsWith("s3://")){this.env="aws";return}throw new Error(`invalid-source-type: ${e}`)}fileSize(){return u(this,null,function*(){const e=this.options.source;return(yield m.default.promises.stat(e)).size})}uploadToS3(){return u(this,null,function*(){const e=this.options.source,t=this.options.destination;if(e==="")throw new Error("source not definded");if(t==="")throw new Error("destination not definded");const r=m.default.createReadStream(e);if(!r.readable)throw new Error("failed-to-read-source: Make sure the provided file is readable");const o=yield this.fileSize();o>100*1024*1024&&console.warn(`file size ${o} is larger`);const{data:l,err:s}=q(t,{file:!0});if(s.toString().startsWith("invalid-s3-uri"))throw new Error(`failed-to-parse-s3-uri: ${s}`);l.file===""&&(l.file=f.default.basename(e),console.warn("Destination filename not provided. Using source source basename"+l.file)),console.log(`uploading ${e} to ${t}`);const i=yield w({region:"us-east-2"}).send(new h.PutObjectCommand({Bucket:l.bucket,Key:l.key+l.file,Body:r})).catch(a=>{throw new Error(`failed-upload-s3: Error while uploading to S3: ${a}`)}).finally(()=>{r.close()});if(i.$metadata.httpStatusCode!==void 0&&i.$metadata.httpStatusCode!==200)throw new Error(`failed-upload-s3: Error while uploading to S3: ${i.$metadata.httpStatusCode}`);if(i.$metadata.requestId===void 0)throw new Error("failed-upload-s3");return i.$metadata.requestId})}initMultipartUpload(e,t){return u(this,null,function*(){const r=w({credentials:S("default"),region:"us-east-2"}),o=new h.CreateMultipartUploadCommand({Bucket:e,ContentEncoding:"utf8",ContentType:"text/csv",Key:t}),l=yield r.send(o);if(l.UploadId===void 0||l.$metadata.httpStatusCode!==200)throw new Error("failed-multipart-upload");if(l.UploadId===void 0)throw new Error("failed-multipart-upload");return l.UploadId})}}function L(n){return u(this,null,function*(){return yield new Promise((e,t)=>{(n.source===""||n.source===void 0)&&t(new Error("invalid-source: the source path is required")),n.destination===""&&t(new Error("failed-to-create-dataset: destination is required")),n.source.endsWith(".csv")||t(new Error(`invalid-file-type: expected a .csv file, ${n.source} is not`));const r=new M(n);Promise.all([r.determineEnv(),r.determineShape(),r.determineConnector(),r.determineLoader(),r.headerColumn(),r.fileSize(),r.rowCount()]).then(()=>{console.log(`created catalog for: ${n.name}`),e(r)}).catch(o=>t(o))})})}class j{constructor(){this.query="",this.stmt={type:"",distinct:!1,columns:[{name:"",type:""}],from:[{schemaname:"",relname:"",inh:""}],sort:{},where:{},group:[],having:[],orderBy:[],limit:{type:"",val:""}}}parse(e){var l,s,d;if(e.trim()==="")throw new Error("invalid-query: no query found");const t=(0,O.parse)(e);Object.keys(t[0].RawStmt.stmt)[0]==="SelectStmt"&&(this.stmt.type="select");const r=t[0].RawStmt.stmt.SelectStmt,o=r.limitOption;if(o==="LIMIT_OPTION_DEFAULT"&&(this.stmt.limit={type:r.limitOption,val:""}),o==="LIMIT_OPTION_COUNT"&&r.limitCount!==""&&(this.stmt.limit={type:r.limitOption,val:r.limitCount.A_Const.val.Integer.ival}),r.distinctClause!==void 0&&(this.stmt.distinct=!0),r.targetList!==void 0&&(this.stmt.columns=r.targetList.map(i=>{const a=i.ResTarget.val.ColumnRef.fields[0];return a.A_Star!==void 0?{name:"*"}:{name:a.String.str}})),this.stmt.from=r.fromClause.map(i=>{const a={schemaname:"",relname:"",inh:""},c=i.RangeVar;return c.schemaname!==void 0&&(a.schemaname=c.schemaname),c.relname!==void 0&&(a.relname=c.relname),c.inh!==void 0&&(a.inh=c.inh),a}),r.whereClause!==void 0){if(r.whereClause!==null&&((l=r==null?void 0:r.whereClause)==null?void 0:l.A_Expr.kind)==="AEXPR_OP"){const i=r.whereClause.A_Expr,a={operator:"",left:{},right:{}};a.operator=i.name[0].String.str,i.lexpr!==null&&(a.left=i.lexpr.ColumnRef.fields[0].String.str),i.rexpr!==null&&(a.right=i.rexpr.ColumnRef.fields[0].String.str),this.stmt.where=a}if(((s=r==null?void 0:r.whereClause)==null?void 0:s.A_Expr)!==null&&((d=r==null?void 0:r.whereClause)==null?void 0:d.A_Expr.kind)==="AEXPR_IN"){const i=r.whereClause.A_Expr;console.log(i)}if(r.whereClause.BoolExpr!==null){if(r.whereClause.BoolExpr.boolop==="AND_EXPR"){const i=r.whereClause.BoolExpr.args;console.log(JSON.stringify(i,null,2))}if(r.whereClause.BoolExpr.boolop==="OR_EXPR"){const i=r.whereClause.BoolExpr.args;console.log(JSON.stringify(i,null,2))}}}return this.stmt}}class B{constructor(e,t){this.stmt=t,this.catalog=e,this.plan={cmd:"",args:[]}}analyze(){if(console.log("analyzing query"),this.plan.cmd=g,this.stmt.type!=="select")throw new Error("not-implemented: only select queries are supported at this time");if(console.log(this.stmt),this.stmt.from.length===1){const e=this.stmt.from[0].relname;console.log("from table: ",e);const t=this.catalog.options.source;if(this.stmt.columns.length===1){if(this.stmt.columns[0].name==="*")return this.plan.args=["--icsv","--ojson","cat",t],this.plan;this.plan.args=["--icsv","--ojson","cut","-f",this.stmt.columns[0].name,t]}if(this.stmt.columns.length>1){const r=this.stmt.columns.map(o=>o.name).join(",");return console.log("fields: ",r),this.plan.args=["--icsv","--ojson","cut","-o","-f",r,t],this.plan}}return this.plan}}class U{constructor(e){this.name=e,this.catalogs=new Map,this.createdAt=new Date,this.env="local",this.stmt=""}list(){return Array.from(this.catalogs.values())}remove(e){this.catalogs.delete(e.options.source)}get(e){if(this.catalogs.get(e)!=null)return this.catalogs.get(e)}add(e){if(Array.isArray(e)){if(e.length===1&&e[0].name!==""){const t=e[0];if(this.catalogs.has(t.name))throw new Error(`duplicate-dataset: ${t.name}`);return this.catalogs.set(t.name,t),t.name}return e.forEach(t=>{if(this.catalogs.has(t.name))throw new Error(`duplicate-dataset: ${t.name}`);console.log(`added ${t.name} to the workflow`),this.catalogs.set(t.name,t)}),e.map(t=>t.name)}if(this.catalogs.has(e.name))throw new Error(`duplicate-dataset: ${e.name}`);return this.catalogs.set(e.name,e),console.log(`added ${e.name} to the workflow`),e.name}query(e){return u(this,null,function*(){let t="";const r=new j().parse(e);if(r.from.length===1&&(t=r.from[0].relname),console.log(`raw query: ${e}`),!this.catalogs.has(t))throw new Error(`unknown-catalog: ${t}`);const o=this.catalogs.get(t);if(o==null)throw new Error(`catalog-not-found: ${t}`);console.log(`using catalog: ${o.name}`);const l=new B(o,r).analyze();console.log(`plan: ${JSON.stringify(l,null,2)}`),o.connector instanceof m.default.WriteStream&&(console.log(`${l.cmd} ${l.args.join(" ")}`),(0,v.spawn)(l.cmd,l.args).stdout.pipe(o.connector))})}}function J(n){return console.log(`created workflow: ${n}`),new U(n)}module.exports=_(D);0&&(module.exports={createCatalog,createWorkflow});
