var a=(s,e,o)=>new Promise((t,i)=>{var l=r=>{try{c(o.next(r))}catch(n){i(n)}},m=r=>{try{c(o.throw(r))}catch(n){i(n)}},c=r=>r.done?t(r.value):Promise.resolve(r.value).then(l,m);c((o=o.apply(s,e)).next())});import E,{join as O}from"path";import g from"os";import d from"fs";import{exec as b}from"child_process";import{fromIni as S}from"@aws-sdk/credential-providers";import{S3Client as x}from"@aws-sdk/client-s3";var f=s=>S({profile:s,mfaCodeProvider:e=>a(void 0,null,function*(){return e})});function p(s){return new x(s)}import R from"util";var h=R.promisify(b),w=O(process.cwd(),"node_modules",".bin","mlr@v6.0.0"),y=class{constructor(e){this.name=e.name!==""?e.name:E.basename(e.source),this.options=e,this.env="local",this.createdAt=new Date,this.state="init",this.connector=null,this.loader=null,this.metadata={type:"",columns:[],header:!1,extension:"",size:0,rowCount:0,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{}}}rowCount(){return a(this,null,function*(){let e=yield h(`${w} --ojson count ${this.options.source}`);if(e.stderr!=="")throw new Error(`failed-to-get-row-count: ${e.stderr}`);let o=JSON.parse(e.stdout);if(o.length===0)throw new Error("failed-to-get-row-count: no rows found");if(o[0].count===void 0)throw new Error("failed-to-get-row-count: no count found");this.metadata.rowCount=o[0].count})}headerColumn(){return a(this,null,function*(){let e=yield h(`${w} --icsv --ojson head -n 1 ${this.options.source}`);if(e.stderr!=="")throw new Error(`failed-to-get-header-column: ${e.stderr}`);console.log(e);let o=JSON.parse(e.stdout);if(o.length===0)throw new Error("failed-to-get-header-column: no columns found");this.metadata.columns=Object.keys(o[0])})}fileType(){return a(this,null,function*(){if(g.platform()!=="linux"&&g.platform()!=="darwin")throw new Error("unsupported-platform");let e=yield h(`file ${this.options.source} --mime-type`);if(e.stderr!=="")throw new Error(`failed-to-detect-mime-type: ${e.stderr}`);let o=e.stdout.split(":")[1].trim();if(o==="")throw new Error("failed-to-detect-mime-type");this.options.source.endsWith(".csv")&&(this.metadata.extension="csv"),this.options.source.endsWith(".json")&&(this.metadata.extension="json"),this.metadata.type=o})}fileSize(){return a(this,null,function*(){let e=yield d.promises.stat(this.options.source);this.metadata.size=e.size})}determineLoader(){if(this.options.destination.startsWith("s3://")){this.loader=p({credentials:f("default"),region:"us-east-2"});return}if(this.options.source.startsWith("/")||this.options.source.startsWith("../")||this.options.source.startsWith("./")){this.loader=d.createWriteStream(this.options.destination);return}throw new Error("unsupported-loader")}determineConnector(){if(this.options.source.startsWith("/")||this.options.source.startsWith("../")||this.options.source.startsWith("./")){if(!d.existsSync(this.options.source))throw new Error(`file: ${this.options.source} not found, please provide a valid file path`);this.connector=d.createReadStream(this.options.source);return}if(this.options.source.startsWith("s3://")){this.connector=p({credentials:f("default"),region:"us-east-2"});return}throw new Error(`unsupported-source for: ${this.options.source}`)}};function C(s,e){return a(this,null,function*(){return yield new Promise((o,t)=>{(e.source===""||e.source===void 0)&&t(new Error("failed-to-create-catalog: no source provided")),(e.destination===""||e.destination===void 0)&&t(new Error("failed-to-create-catalog: no destination provided")),(e.name===""||e.name===void 0)&&t(new Error("failed-to-create-catalog: no name provided")),e.input==="csv"&&!e.source.endsWith(".csv")&&t(new Error("failed-to-create-catalog: file extension does not match input type")),e.input==="json"&&!e.source.endsWith(".json")&&t(new Error("failed-to-create-catalog: file extension does not match input type"));let i=new y(e);Promise.all([i.determineLoader(),i.determineConnector(),i.headerColumn(),i.fileSize(),i.fileType(),i.rowCount()]).then(()=>{console.log(`created catalog for: ${e.name}`),o(i)}).catch(l=>t(l))})})}import{parse as T}from"pgsql-parser";var v=class{constructor(){this.query="",this.stmt={type:"",distinct:!1,columns:[{name:"",type:""}],from:[{schemaname:"",relname:"",inh:""}],sort:{},where:{},group:[],having:[],orderBy:[],limit:{type:"",val:""}}}parse(e){var l,m,c;if(e.trim()==="")throw new Error("invalid-query: no query found");console.log(`raw: ${e}`);let o=T(e);Object.keys(o[0].RawStmt.stmt)[0]==="SelectStmt"&&(this.stmt.type="select");let t=o[0].RawStmt.stmt.SelectStmt,i=t.limitOption;if(i==="LIMIT_OPTION_DEFAULT"&&(this.stmt.limit={type:t.limitOption,val:""}),i==="LIMIT_OPTION_COUNT"&&t.limitCount!==""&&(this.stmt.limit={type:t.limitOption,val:t.limitCount.A_Const.val.Integer.ival}),t.distinctClause!==void 0&&(this.stmt.distinct=!0),t.targetList!==void 0&&(this.stmt.columns=t.targetList.map(r=>{let n=r.ResTarget.val.ColumnRef.fields[0];return n.A_Star!==void 0?{name:"*"}:{name:n.String.str}})),this.stmt.from=t.fromClause.map(r=>{let n={schemaname:"",relname:"",inh:""},u=r.RangeVar;return u.schemaname!==void 0&&(n.schemaname=u.schemaname),u.relname!==void 0&&(n.relname=u.relname),u.inh!==void 0&&(n.inh=u.inh),n}),t.whereClause!==void 0){if(t.whereClause!==null&&((l=t==null?void 0:t.whereClause)==null?void 0:l.A_Expr.kind)==="AEXPR_OP"){let r=t.whereClause.A_Expr,n={operator:"",left:{},right:{}};n.operator=r.name[0].String.str,r.lexpr!==null&&(n.left=r.lexpr.ColumnRef.fields[0].String.str),r.rexpr!==null&&(n.right=r.rexpr.ColumnRef.fields[0].String.str),this.stmt.where=n}if(((m=t==null?void 0:t.whereClause)==null?void 0:m.A_Expr)!==null&&((c=t==null?void 0:t.whereClause)==null?void 0:c.A_Expr.kind)==="AEXPR_IN"){let r=t.whereClause.A_Expr;console.log(r)}if(t.whereClause.BoolExpr!==null){if(t.whereClause.BoolExpr.boolop==="AND_EXPR"){let r=t.whereClause.BoolExpr.args;console.log(JSON.stringify(r,null,2))}if(t.whereClause.BoolExpr.boolop==="OR_EXPR"){let r=t.whereClause.BoolExpr.args;console.log(JSON.stringify(r,null,2))}}}return this.stmt}};function $(s){return new v().parse(s)}function U(s,e){return a(this,null,function*(){let o=yield C(s,e);console.log(o)})}export{$ as parseQuery,U as query};
