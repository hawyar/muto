var u=(s,t,r)=>new Promise((e,i)=>{var a=n=>{try{o(r.next(n))}catch(l){i(l)}},m=n=>{try{o(r.throw(n))}catch(l){i(l)}},o=n=>n.done?e(n.value):Promise.resolve(n.value).then(a,m);o((r=r.apply(s,t)).next())});import d from"path";import{createInterface as _}from"readline";import w from"os";import{constants as j,createReadStream as M}from"fs";import{exec as R}from"child_process";import T from"util";import{access as z,stat as y}from"fs/promises";import O from"is-installed-globally";import{join as h}from"path";import{cwd as f}from"process";import{existsSync as P}from"fs";import{execSync as A}from"child_process";var g=class{constructor(){this.version="6.0.0",this.path=h(f(),"node_modules",".bin","mlr@v"+this.version),this.args=[]}getCmd(){return this.path}getArgs(){return this.args}getPath(){if(this.path==="")throw new Error("miller-path-not-set: missing miller binary path");return this.path}fileSource(t){if(this.args.length===0)throw new Error("First specifiy the arguments then add the source file");return this.args.push(t),this}csvInput(){return this.args.push("--icsv"),this}jsonInput(){return this.args.push("--ijson"),this}csvOutput(){return this.args.push("--ocsv"),this}jsonOutput(){return this.args.push("--ojson"),this}implicitCsvHeader(t){return this.args.push(`--implicit-csv-header label ${t.join(",")}`),this}count(){return this.args.push("count"),this}cat(){return this.args.push("cat"),this}head(t){return this.args.push(`head -n ${t}`),this}determinePath(){if(O){let t=A("npm root -g");if(t===null)throw new Error("Failed to find global miller path");let r=h(t.toString().trim(),"muto","node_modules",".bin","mlr@"+this.version);P(r)&&(this.path=r);return}this.path===""&&(this.path=h(f(),"node_modules",".bin","mlr@"+this.version))}};function c(){let s=new g;return s.determinePath(),s}var p=T.promisify(R),C=class{constructor(t){this.options=t,this.createdAt=new Date,this.metadata={root:process.cwd(),dir:"",base:"",ext:"",fileName:"",type:"csv",columns:[],header:!1,filesize:0,rowCount:0,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{}}}getSource(){return this.options.source}getDestination(){return this.options.destination}getOptions(){return this.options}getMetadata(){return this.metadata}getColumns(){return this.metadata.columns}rowCount(){return u(this,null,function*(){let t=c(),r=t.getCmd()+" "+t.jsonOutput().count().fileSource(this.getSource()).getArgs().join(" "),e=yield p(r);if(e.stderr!=="")throw new Error(`failed-to-get-row-count: ${e.stderr}`);let i=JSON.parse(e.stdout);if(i.length===0)throw new Error("failed-to-get-row-count: no rows found");if(i[0].count===void 0)throw new Error("failed-to-get-row-count: no count found");this.metadata.rowCount=i[0].count})}columnHeader(){return u(this,null,function*(){let t=c(),r=t.getCmd()+" "+t.jsonOutput().head(1).fileSource(this.options.source).getArgs().join(" "),e=yield p(r);if(e.stderr!=="")throw new Error(`failed-to-get-header-column: ${e.stderr}`);let i=JSON.parse(e.stdout);if(i.length===0)throw new Error("failed-to-get-header-column: no columns found");for(let a in i[0])this.metadata.columns.push(i[0][a]);this.metadata.header=!0})}validateSource(){return u(this,null,function*(){let t=yield y(this.options.source);if(!t.isFile())throw Error("Source path is not a file");if(yield z(this.options.source,j.R_OK).catch(()=>{throw Error("Source file is not readable")}),t.size===0)throw Error("Source file is empty");let r=d.parse(this.options.source);this.metadata.dir=r.dir,this.metadata.base=r.base,this.metadata.ext=r.ext,this.metadata.fileName=r.name})}fileType(){return u(this,null,function*(){if(w.platform()!=="linux"&&w.platform()!=="darwin")throw new Error("unsupported-platform");let t=yield p(`file ${this.options.source} --mime-type`);if(t.stderr!=="")throw new Error(`failed-to-detect-mime-type: ${t.stderr}`);let r=t.stdout.split(":")[1].trim();if(r==="")throw new Error("failed-to-detect-mime-type");if(r==="text/csv"){this.metadata.type="csv";return}if(r==="application/json"){this.metadata.type="json";return}let e=_({input:M(this.options.source)}),i="";throw e.on("line",a=>{i=a,e.close()}),e.on("close",()=>{if(i.startsWith("{")||i.startsWith("["))return this.metadata.type="json",!0;if(i.startsWith('"')||i.startsWith("'"))return this.metadata.type="csv",!0}),Error(`Error: Unsupported file type ${r}`)})}fileSize(){return u(this,null,function*(){let t=yield y(this.options.source);this.metadata.filesize=t.size})}sanitizeColumnNames(t){return t.map(r=>r.replace(/[^a-zA-Z0-9]/g,"_"))}};function v(s){return u(this,null,function*(){return yield new Promise((t,r)=>{s===void 0&&r(new Error("missing-catalog-options")),(s.source===void 0||s.source==="")&&r(new Error("failed-to-create-catalog: no source provided")),(s.destination===void 0||s.destination==="")&&r(new Error("failed-to-create-catalog: no destination provided"));let e=Object.assign({},s);if(s.input===void 0)switch(d.extname(s.source)){case".csv":e.input="csv";break;case".json":e.input="json";break;default:r(new Error("failed-to-create-catalog: unsupported input file type"))}if(s.output===void 0)switch(d.extname(s.destination)){case".csv":e.output="csv";break;case".json":e.output="json";break;default:r(new Error("failed-to-create-catalog: unsupported output file type"))}let i=new C(e);Promise.all([i.validateSource(),i.columnHeader(),i.fileSize(),i.fileType(),i.rowCount()]).then(()=>{console.log(`created catalog ${i.getMetadata().fileName}`),t(i)}).catch(a=>r(a))})})}var E=class{constructor(t,r){this.stmt=r,this.catalog=t,this.plan={cmd:"",args:[]}}analyze(){console.log("analyzing query:");let t=c();if(this.plan.cmd=t.getPath(),this.stmt.type!=="select")throw Error("Only select queries are supported at this time");if(this.stmt.from.length!==1)throw Error("Multi-table queries are not supported");let r=this.stmt.from[0].relname;console.log("table:",r);let e=this.catalog.options.source;if(this.stmt.columns.length===1){if(this.stmt.columns[0].name==="*")return console.log("columns: *"),this.plan.args=t.csvInput().jsonOutput().cat().fileSource(e).getArgs(),this.plan;let i=this.stmt.columns[0].name.replace(/[^a-zA-Z0-9]/g,"_");if(!this.catalog.metadata.columns.includes(i))throw new Error(`column-not-found: ${i}`);return this.plan.args=t.csvInput().jsonOutput().implicitCsvHeader(this.catalog.getColumns()).fileSource(e).getArgs(),this.plan}if(this.stmt.columns.length>1){let i=this.stmt.columns.map(a=>{let m=a.name.replace(/[^a-zA-Z0-9]/g,"_");if(!this.catalog.metadata.columns.includes(m))throw new Error(`column ${a.name} is not in the list of columns`);return m}).join(",");return this.plan.args=["--icsv","--ojson","--implicit-csv-header","label",`${this.catalog.metadata.columns.join(",")}`,"then","cut","-o","-f",i,e],this.plan}throw Error("Error: no columns specified")}};function S(s,t){return new E(s,t).analyze()}import{parse as q}from"pgsql-parser";var x=class{constructor(t){this.query=t,this.stmt={type:"",distinct:!1,columns:[{name:"",type:""}],from:[{schemaname:"",relname:"",inh:""}],sort:{},where:{operator:"",left:"",right:""},group:[],having:[],orderBy:[],limit:{type:"",val:""}}}getStmt(){return this.stmt}getColumns(){return this.stmt.columns.map(t=>t.name)}isDistinct(){return this.stmt.distinct}getWhere(){return this.stmt.where}limit(){return parseInt(this.stmt.limit.val)}getTable(){return this.stmt.from[0].relname}getType(){return this.stmt.type}parse(){var a,m;let t=this.query;if(t.trim()==="")throw new Error("invalid-query: no query found");let r=q(t);Object.keys(r[0].RawStmt.stmt)[0]==="SelectStmt"&&(this.stmt.type="select");let e=r[0].RawStmt.stmt.SelectStmt,i=e.limitOption;if(i==="LIMIT_OPTION_DEFAULT"&&(this.stmt.limit={type:e.limitOption,val:""}),i==="LIMIT_OPTION_COUNT"&&e.limitCount!==""&&(this.stmt.limit={type:e.limitOption,val:e.limitCount.A_Const.val.Integer.ival}),e.distinctClause!==void 0&&(this.stmt.distinct=!0),e.targetList!==void 0&&(this.stmt.columns=e.targetList.map(o=>{let n=o.ResTarget.val.ColumnRef.fields[0];return n.A_Star!==void 0?{name:"*"}:{name:n.String.str}})),e.fromClause!==void 0&&(this.stmt.from=e.fromClause.map(o=>{let n={schemaname:"",relname:"",inh:""},l=o.RangeVar;return l.schemaname!==void 0&&(n.schemaname=l.schemaname),l.relname!==void 0&&(n.relname=l.relname),l.inh!==void 0&&(n.inh=l.inh),n})),e.whereClause!==void 0){if(e.whereClause!==null&&((a=e==null?void 0:e.whereClause)==null?void 0:a.A_Expr.kind)==="AEXPR_OP"){let o=e.whereClause.A_Expr,n={operator:"",left:"",right:""};n.operator=o.name[0].String.str,o.lexpr!==void 0&&(n.left=o.lexpr.ColumnRef.fields[0].String.str),o.rexpr!==void 0&&(o.rexpr.ColumnRef!==void 0&&Object.keys(o.rexpr.ColumnRef.fields[0]).includes("String")&&(n.right=o.rexpr.ColumnRef.fields[0].String.str),o.rexpr.A_Const!==void 0&&(n.right=o.rexpr.A_Const.val.Integer.ival)),this.stmt.where=n}e.whereClause.A_Expr!==void 0&&((m=e==null?void 0:e.whereClause)==null||m.A_Expr.kind),e.whereClause.BoolExpr!==void 0&&(e.whereClause.BoolExpr.boolop,e.whereClause.BoolExpr.boolop)}return this.stmt}};function b(s){let t=new x(s);return t.parse(),t}import{spawn as I}from"child_process";import{createWriteStream as D}from"fs";function mt(s,t){return u(this,null,function*(){if(s===void 0||s==="")throw new Error("No query provided");let r=b(s);if(r.getType()!=="select")throw new Error("Only select queries are supported at this time");let e=yield v(t),i=S(e,r.getStmt()),a=I(i.cmd,i.args);if(a.on("error",o=>{console.error(o)}),a.stdout===null)throw new Error("stdout is null");let m=D(e.getDestination());a.stdout.pipe(m)})}export{v as createCatalog,b as parser,mt as query};
