var u=(i,e,s)=>new Promise((t,r)=>{var n=o=>{try{a(s.next(o))}catch(c){r(c)}},l=o=>{try{a(s.throw(o))}catch(c){r(c)}},a=o=>o.done?t(o.value):Promise.resolve(o.value).then(n,l);a((s=s.apply(i,e)).next())});import h from"path";import{createInterface as A}from"readline";import w from"os";import{constants as _,createReadStream as M}from"fs";import{exec as R}from"child_process";import T from"util";import{access as q,stat as y}from"fs/promises";import O from"is-installed-globally";import{join as d}from"path";import{cwd as f}from"process";import{existsSync as P}from"fs";import{execSync as j}from"child_process";var g=class{constructor(){this.version="6.0.0",this.path=d(f(),"node_modules",".bin","mlr@v"+this.version),this.args=[]}getCmd(){return this.path}getArgs(){return this.args}getPath(){if(this.path==="")throw new Error("miller-path-not-set: missing miller binary path");return this.path}fileSource(e){if(this.args.length===0)throw new Error("First specifiy the arguments then add the source file");return this.args.push(e),this}csvInput(){return this.args.push("--icsv"),this}jsonInput(){return this.args.push("--ijson"),this}csvOutput(){return this.args.push("--ocsv"),this}jsonOutput(){return this.args.push("--ojson"),this}implicitCsvHeader(e){return this.args.push(`--implicit-csv-header label ${e.join(",")}`),this}count(){return this.args.push("count"),this}cat(){return this.args.push("cat"),this}cut(e){return this.args.push(`cut -o -f ${e.join(",")}`),this}head(e){return this.args.push(`head -n ${e}`),this}determinePath(){if(O){let e=j("npm root -g");if(e===null)throw new Error("Failed to find global miller path");let s=d(e.toString().trim(),"muto","node_modules",".bin","mlr@"+this.version);P(s)&&(this.path=s);return}this.path===""&&(this.path=d(f(),"node_modules",".bin","mlr@"+this.version))}};function m(){let i=new g;return i.determinePath(),i}var p=T.promisify(R),v=class{constructor(e){this.options=e,this.createdAt=new Date,this.source={path:{root:"",dir:"",base:"",ext:"",name:""},type:"csv",columns:[],header:!1,fileSize:0,rowCount:0,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{},preview:[]},this.destination={path:{root:"",dir:"",base:"",ext:"",name:""},type:"csv",columns:[],header:!1,fileSize:0,rowCount:0,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{},preview:[]}}getSource(){return this.source}getDestination(){return this.destination}getOptions(){return this.options}getColumns(){return this.source.columns}rowCount(){return u(this,null,function*(){let e=m(),s=e.getCmd()+" "+e.jsonOutput().count().fileSource(this.options.source).getArgs().join(" "),t=yield p(s);if(t.stderr!=="")throw new Error(`failed-to-get-row-count: ${t.stderr}`);let r=JSON.parse(t.stdout);if(r.length===0)throw new Error("failed-to-get-row-count: no rows found");if(r[0].count===void 0)throw new Error("failed-to-get-row-count: no count found");this.source.rowCount=r[0].count})}columnHeader(){return u(this,null,function*(){let e=m(),s=e.getCmd()+" "+e.jsonOutput().head(1).fileSource(this.options.source).getArgs().join(" "),t=yield p(s);if(t.stderr!=="")throw new Error(`failed-to-get-header-column: ${t.stderr}`);let r=JSON.parse(t.stdout);if(r.length===0)throw new Error("failed-to-get-header-column: no columns found");for(let n in r[0])this.source.columns.push(r[0][n]);this.source.header=!0})}validateSource(){return u(this,null,function*(){let e=yield y(this.options.source);if(!e.isFile())throw Error("Source path is not a file");if(yield q(this.options.source,_.R_OK).catch(()=>{throw Error("Source file is not readable")}),e.size===0)throw Error("Source file is empty");this.source.path=h.parse(this.options.source)})}validateDestination(){return u(this,null,function*(){this.destination.path=h.parse(this.options.destination)})}fileType(){return u(this,null,function*(){if(w.platform()!=="linux"&&w.platform()!=="darwin")throw new Error("unsupported-platform");let{stdout:e,stderr:s}=yield p(`file ${this.options.source} --mime-type`);if(s!=="")throw new Error(`failed-to-detect-mime-type: ${s}`);let t=e.split(":")[1].trim();if(t==="application/json")throw new Error("failed-to-detect-mime-type");if(t==="application/csv"){this.source.type="csv";return}if(t==="application/json"){this.source.type="json";return}if(t==="text/csv"){this.source.type="csv";return}if(t==="text/plain"){this.source.type="csv";return}let r=A({input:M(this.options.source)}),n="";throw r.on("line",l=>{n=l,r.close()}),r.on("close",()=>{if(n.startsWith("{")||n.startsWith("["))return!0;if(this.options.delimiter===void 0&&n.split(this.options.delimiter).length===this.source.columns.length)return this.source.type="csv",!0;throw new Error("failed-to-detect-mime-type")}),Error(`Unsupported file type ${t}`)})}fileSize(){return u(this,null,function*(){let e=yield y(this.options.source);this.source.fileSize=e.size})}sanitizeColumnNames(e){return e.map(s=>s.replace(/[^a-zA-Z0-9]/g,"_"))}preview(){return u(this,null,function*(){let e=m(),s=e.getCmd()+e.jsonOutput().head(5).fileSource(this.options.source).getArgs().join(" "),t=yield p(s);if(t.stderr!=="")throw new Error(t.stderr);let r=JSON.parse(t.stdout);if(r.length===0)throw new Error("failed-to-get-preview: no rows found");this.source.preview=r})}};function C(i){return u(this,null,function*(){return yield new Promise((e,s)=>{i===void 0&&s(new Error("missing-catalog-options")),(i.source===void 0||i.source==="")&&s(new Error("failed-to-create-catalog: no source provided")),(i.destination===void 0||i.destination==="")&&s(new Error("failed-to-create-catalog: no destination provided"));let t=Object.assign({},i);if(i.input===void 0)switch(h.extname(i.source)){case".csv":t.input="csv";break;case".json":t.input="json";break;default:s(new Error("failed-to-create-catalog: unsupported input file type"))}if(i.output===void 0)switch(h.extname(i.destination)){case".csv":t.output="csv";break;case".json":t.output="json";break;default:s(new Error("failed-to-create-catalog: unsupported output file type"))}let r=new v(t);Promise.all([r.validateSource(),r.validateDestination(),r.columnHeader(),r.fileSize(),r.fileType(),r.rowCount()]).then(()=>{console.log(`created catalog ${r.getSource().path.name}`),e(r)}).catch(n=>s(n))})})}var S=class{constructor(e,s){this.stmt=s,this.catalog=e,this.plan={cmd:"",args:[]}}analyze(){let e=m();if(this.plan.cmd=e.getPath(),this.stmt.type!=="select")throw Error("Only select queries are supported at this time");if(this.stmt.from.length!==1)throw Error("Multi-table queries are not supported");let s=this.stmt.from[0].relname;console.log("table:",s);let t=this.catalog.options.source;if(this.stmt.columns.length===1){if(this.stmt.columns[0].name==="*")return console.log("columns: *"),this.plan.args=e.csvInput().jsonOutput().cat().fileSource(t).getArgs(),this.plan;let r=this.stmt.columns[0].name.replace(/[^a-zA-Z0-9]/g,"_");if(!this.catalog.source.columns.includes(r))throw new Error(`Column not found,  ${r}`);return console.log("column:",this.stmt.columns[0].name),this.plan.args=e.csvInput().jsonOutput().cut([this.stmt.columns[0].name]).fileSource(t).getArgs(),this.plan}if(this.stmt.columns.length>1){let r=this.stmt.columns.map(n=>{let l=n.name.replace(/[^a-zA-Z0-9]/g,"_");if(!this.catalog.source.columns.includes(l))throw new Error(`column ${n.name} is not in the list of columns`);return l}).join(",");return this.plan.args=["--icsv","--ojson","--implicit-csv-header","label",`${this.catalog.source.columns.join(",")}`,"then","cut","-o","-f",r,t],this.plan}throw Error("Error: no columns specified")}};function E(i,e){return new S(i,e).analyze()}import{parse as z}from"pgsql-parser";var x=class{constructor(e){this.query=e,this.stmt={type:"",distinct:!1,columns:[{name:"",type:""}],from:[{schemaname:"",relname:"",inh:""}],sort:{},where:{operator:"",left:"",right:""},groupBy:[],having:[],orderBy:[],limit:{type:"",val:""}}}getStmt(){return this.stmt}getColumns(){return this.stmt.columns.map(e=>e.name)}isDistinct(){return this.stmt.distinct}getWhere(){return this.stmt.where}limit(){return parseInt(this.stmt.limit.val)}getTable(){return this.stmt.from[0].relname}getType(){return this.stmt.type}getGroupBy(){return this.stmt.groupBy}parse(){var n,l;let e=this.query;if(e.trim()==="")throw new Error("invalid-query: no query found");let s=z(e);Object.keys(s[0].RawStmt.stmt)[0]==="SelectStmt"&&(this.stmt.type="select");let t=s[0].RawStmt.stmt.SelectStmt,r=t.limitOption;if(r==="LIMIT_OPTION_DEFAULT"&&(this.stmt.limit={type:t.limitOption,val:""}),r==="LIMIT_OPTION_COUNT"&&t.limitCount!==""&&(this.stmt.limit={type:t.limitOption,val:t.limitCount.A_Const.val.Integer.ival}),t.distinctClause!==void 0&&(this.stmt.distinct=!0),t.targetList!==void 0&&(this.stmt.columns=t.targetList.map(a=>{let o=a.ResTarget.val.ColumnRef.fields[0];return o.A_Star!==void 0?{name:"*"}:{name:o.String.str}})),t.fromClause!==void 0&&(this.stmt.from=t.fromClause.map(a=>{let o={schemaname:"",relname:"",inh:""},c=a.RangeVar;return c.schemaname!==void 0&&(o.schemaname=c.schemaname),c.relname!==void 0&&(o.relname=c.relname),c.inh!==void 0&&(o.inh=c.inh),o})),t.groupClause!==void 0){let a=t.groupClause.map(o=>o.ColumnRef.fields[0].String.str);this.stmt.groupBy=a}if(t.whereClause!==void 0){if(t.whereClause!==null&&((n=t==null?void 0:t.whereClause)==null?void 0:n.A_Expr.kind)==="AEXPR_OP"){let a=t.whereClause.A_Expr,o={operator:"",left:"",right:""};o.operator=a.name[0].String.str,a.lexpr!==void 0&&(o.left=a.lexpr.ColumnRef.fields[0].String.str),a.rexpr!==void 0&&(a.rexpr.ColumnRef!==void 0&&Object.keys(a.rexpr.ColumnRef.fields[0]).includes("String")&&(o.right=a.rexpr.ColumnRef.fields[0].String.str),a.rexpr.A_Const!==void 0&&(o.right=a.rexpr.A_Const.val.Integer.ival)),this.stmt.where=o}t.whereClause.A_Expr!==void 0&&((l=t==null?void 0:t.whereClause)==null||l.A_Expr.kind),t.whereClause.BoolExpr!==void 0&&(t.whereClause.BoolExpr.boolop,t.whereClause.BoolExpr.boolop)}return this.stmt}};function b(i){let e=new x(i);return e.parse(),e}import{spawn as I}from"child_process";import{createWriteStream as D}from"fs";function ct(i,e){return u(this,null,function*(){if(i===void 0||i==="")throw new Error("No query provided");let s=b(i);if(s.getType()!=="select")throw new Error("Only select queries are supported at this time");let t=yield C(e),r=E(t,s.getStmt());console.log("mlr "+r.args.join(" "));let n=I(r.cmd,r.args);if(n.on("error",l=>{console.error(l)}),n.stdout===null)throw new Error("stdout is null");n.stdout.on("close",()=>{if(e.onEnd!==void 0){e.onEnd();return}console.log("\u2713 query complete ")}),n.stdout.pipe(D(e.destination))})}export{C as createCatalog,b as parser,ct as query};
