#!/usr/bin/env node
var w=(t,e,n)=>new Promise((a,o)=>{var c=r=>{try{s(n.next(r))}catch(d){o(d)}},i=r=>{try{s(n.throw(r))}catch(d){o(d)}},s=r=>r.done?a(r.value):Promise.resolve(r.value).then(c,i);s((n=n.apply(t,e)).next())});import D from"arg";import h,{join as C}from"path";import y from"os";import $ from"fs";import{exec as S}from"child_process";import _ from"util";import{join as g}from"path";import{cwd as j}from"process";import{execSync as O}from"child_process";import{existsSync as x}from"fs";import{exec as N}from"child_process";import{parse as I}from"pgsql-parser";import{join as M}from"path";import{createWriteStream as B}from"fs";import{fromIni as st}from"@aws-sdk/credential-providers";import{S3Client as lt,HeadObjectCommand as ct}from"@aws-sdk/client-s3";var f=(t,e,n)=>new Promise((a,o)=>{var c=r=>{try{s(n.next(r))}catch(d){o(d)}},i=r=>{try{s(n.throw(r))}catch(d){o(d)}},s=r=>r.done?a(r.value):Promise.resolve(r.value).then(c,i);s((n=n.apply(t,e)).next())}),q=class{constructor(){this.path="",this.version="6.0.0",this.cmd="mlr@v"+this.version,this.args=[]}binPath(){let t=g(j(),"/node_modules",".bin",this.cmd);if(x(t)){this.path=t;return}let e=O("npm root -g");if(console.log(e.toString()),e===null)throw new Error('failed-command: "npm root -g"');let n=e.toString().trim();if(x(g(n,"muto","node_modules",".bin",this.cmd))){this.path=g(n,"muto","node_modules",".bin",this.cmd);return}throw new Error("unable-to-find-mlr: make sure you the `npm run pre` is run")}};function A(){let t=new q;return t.binPath(),t}var v=_.promisify(S),P=A();console.log(P);var b=C(process.cwd(),"node_modules",".bin","mlr@v6.0.0"),R=class{constructor(t){this.name=t.name!==""?t.name:h.basename(t.source),this.options=t,this.createdAt=new Date,this.metadata={fileName:h.basename(t.source),type:"csv",columns:[],header:!1,extension:"",size:0,rowCount:0,spanMultipleLines:!1,quotes:!1,delimiter:",",errors:{},warnings:{}}}getName(){return this.name}getOptions(){return this.options}getMetadata(){return this.metadata}getColumns(){return this.metadata.columns}rowCount(){return f(this,null,function*(){let t=yield v(`${b} --ojson count ${this.options.source}`);if(t.stderr!=="")throw new Error(`failed-to-get-row-count: ${t.stderr}`);let e=JSON.parse(t.stdout);if(e.length===0)throw new Error("failed-to-get-row-count: no rows found");if(e[0].count===void 0)throw new Error("failed-to-get-row-count: no count found");this.metadata.rowCount=e[0].count})}columnHeader(){return f(this,null,function*(){let t=yield v(`${b} --icsv --ojson head -n 1 ${this.options.source}`);if(t.stderr!=="")throw new Error(`failed-to-get-header-column: ${t.stderr}`);let e=JSON.parse(t.stdout);if(e.length===0)throw new Error("failed-to-get-header-column: no columns found");this.metadata.columns=this.sanitizeColumnNames(Object.keys(e[0]))})}sanitizeColumnNames(t){return t.map(e=>e.replace(/[^a-zA-Z0-9]/g,"_"))}fileExtension(){this.options.source.endsWith(".csv")&&(this.metadata.extension="csv"),this.options.source.endsWith(".json")&&(this.metadata.extension="json")}fileType(){return f(this,null,function*(){if(y.platform()!=="linux"&&y.platform()!=="darwin")throw new Error("unsupported-platform");let t=yield v(`file ${this.options.source} --mime-type`);if(t.stderr!=="")throw new Error(`failed-to-detect-mime-type: ${t.stderr}`);let e=t.stdout.split(":")[1].trim();if(e==="")throw new Error("failed-to-detect-mime-type");if(e==="text/csv"){this.metadata.type="csv";return}if(e==="application/json"){this.metadata.type="json";return}throw new Error("unsupported-file-type")})}fileSize(){return f(this,null,function*(){let t=yield $.promises.stat(this.options.source);this.metadata.size=t.size})}};function z(t,e){return f(this,null,function*(){return yield new Promise((n,a)=>{e===void 0&&a(new Error("missing-catalog-options")),(e.source===void 0||e.source==="")&&a(new Error("failed-to-create-catalog: no source provided")),(e.destination===void 0||e.destination==="")&&a(new Error("failed-to-create-catalog: no destination provided"));let o=Object.assign({},e);if((e.name===void 0||e.name==="")&&(o.name=h.basename(o.source).split(".")[0]),e.input===void 0){let i=h.extname(e.source)===".csv"?"csv":"json";console.warn(`no-input-type-provided: assuming ${i}`),o.input=i}if(e.output===void 0){let i=h.extname(e.destination)===".csv"?"csv":"json";console.warn(`no-output-type-provided: assuming ${i}`),o.output=i}let c=new R(o);Promise.all([c.fileSize(),c.fileType(),c.fileExtension(),c.rowCount(),c.columnHeader()]).then(()=>{console.log(`created catalog: ${c.getName()}`),n(c)}).catch(i=>a(i))})})}var T=class{constructor(){this.query="",this.stmt={type:"",distinct:!1,columns:[{name:"",type:""}],from:[{schemaname:"",relname:"",inh:""}],sort:{},where:{},group:[],having:[],orderBy:[],limit:{type:"",val:""}}}parse(t){var e,n;if(t.trim()==="")throw new Error("invalid-query: no query found");let a=I(t);Object.keys(a[0].RawStmt.stmt)[0]==="SelectStmt"&&(this.stmt.type="select");let o=a[0].RawStmt.stmt.SelectStmt,c=o.limitOption;if(c==="LIMIT_OPTION_DEFAULT"&&(this.stmt.limit={type:o.limitOption,val:""}),c==="LIMIT_OPTION_COUNT"&&o.limitCount!==""&&(this.stmt.limit={type:o.limitOption,val:o.limitCount.A_Const.val.Integer.ival}),o.distinctClause!==void 0&&(this.stmt.distinct=!0),o.targetList!==void 0&&(this.stmt.columns=o.targetList.map(i=>{let s=i.ResTarget.val.ColumnRef.fields[0];return s.A_Star!==void 0?{name:"*"}:{name:s.String.str}})),o.fromClause!==void 0&&(this.stmt.from=o.fromClause.map(i=>{let s={schemaname:"",relname:"",inh:""},r=i.RangeVar;return r.schemaname!==void 0&&(s.schemaname=r.schemaname),r.relname!==void 0&&(s.relname=r.relname),r.inh!==void 0&&(s.inh=r.inh),s})),o.whereClause!==void 0){if(o.whereClause!==null&&((e=o==null?void 0:o.whereClause)==null?void 0:e.A_Expr.kind)==="AEXPR_OP"){let i=o.whereClause.A_Expr,s={operator:"",left:{},right:{}};s.operator=i.name[0].String.str,i.lexpr!==void 0&&(s.left=i.lexpr.ColumnRef.fields[0].String.str),i.rexpr!==void 0&&(i.rexpr.ColumnRef!==void 0&&Object.keys(i.rexpr.ColumnRef.fields[0]).includes("String")&&(s.right=i.rexpr.ColumnRef.fields[0].String.str),i.rexpr.A_Const!==void 0&&(s.right=i.rexpr.A_Const.val.Integer.ival)),this.stmt.where=s}o.whereClause.A_Expr!==void 0&&((n=o==null?void 0:o.whereClause)==null?void 0:n.A_Expr.kind)==="AEXPR_IN",o.whereClause.BoolExpr!==void 0&&(o.whereClause.BoolExpr.boolop==="AND_EXPR",o.whereClause.BoolExpr.boolop==="OR_EXPR")}return this.stmt}};function k(t){return new T().parse(t)}var L=M(process.cwd(),"node_modules",".bin","mlr@v6.0.0");function E(t,e){return f(this,null,function*(){let n=yield z(t,e);if(n==null)throw new Error("failed-to-create-catalog");let a=new U(n,k(t)).analyze();console.log(a.cmd+" "+a.args.join(" "));let{stdout:o}=N(a.cmd+" "+a.args.join(" "),{maxBuffer:1024*1024*1024});if(o===null)throw new Error("failed-to-execute-query");o.on("close",()=>{console.log("done executing query")}),o.pipe(B(n.options.destination))})}var U=class{constructor(t,e){this.stmt=e,this.catalog=t,this.plan={cmd:"",args:[]}}analyze(){if(console.log("analyzing query:"),this.plan.cmd=L,this.stmt.type!=="select")throw new Error("not-implemented: only select queries are supported at this time");if(this.stmt.from.length===1){let t=this.stmt.from[0].relname;console.log("	 table:",t);let e=this.catalog.options.source;if(this.stmt.columns.length===1){if(this.stmt.columns[0].name==="*")return this.plan.args=["--icsv","--ojson","--implicit-csv-header","label",`${this.catalog.metadata.columns.join(",")}`,e],this.plan;let n=this.stmt.columns[0].name.replace(/[^a-zA-Z0-9]/g,"_");if(!this.catalog.metadata.columns.includes(n))throw new Error(`column-not-found: ${n}`);return console.log("	 column:",n),this.plan.args=["--icsv","--ojson","--implicit-csv-header","label",`${this.catalog.metadata.columns.join(",")}`,"then","cut","-f",n,e],this.plan}if(this.stmt.columns.length>1){let n=this.stmt.columns.map(a=>{let o=a.name.replace(/[^a-zA-Z0-9]/g,"_");if(!this.catalog.metadata.columns.includes(o))throw new Error(`column ${a.name} is not in the list of columns`);return o}).join(",");return console.log("	 columns: ",n),this.plan.args=["--icsv","--ojson","--implicit-csv-header","label",`${this.catalog.metadata.columns.join(",")}`,"then","cut","-o","-f",n,e],this.plan}}return this.plan}};import l from"picocolors";import p from"picocolors";var W=`
${l.bold("Usage:")}
    muto [command] [arg] [flags]

${l.bold("Commands:")}
    query   Query data using SQL

${l.bold("Flags:")}
    -s    --source        Path to the source file ${l.bold("(required)")}
    -d    --destination   Destination of the processed file ${l.bold("(required)")}

    -i    --input         Input format ${l.bold("default: csv")} (csv, json, xml, etc.) 
    -o    --output        Output format ${l.bold("default: csv")}

    -n    --name          Name of the query ${l.bold("default: file name")}

    -v    --version       Print version
    -h    --help          Print help (what you are reading now)
  
${l.bold("Example:")} 
    muto query "select id, track from albums" -s /path/to/file.csv -d ./result.json
`,u=D({"--help":Boolean,"--version":Boolean,"--source":String,"--destination":String,"--input":String,"--output":String,"--name":String,"-h":"--help","-v":"--version","-s":"--source","-d":"--destination","-i":"--input","-o":"--output","-n":"--name"});function X(){return w(this,null,function*(){u["--help"]&&(m(W),process.exit(0)),u["--version"]&&(m("v1.0.0"),process.exit(0)),u._.length===0&&(m(p.red(`Error: Missing command, see ${l.bold("muto --help")}`)),process.exit(0)),u._.length!==2&&(m(p.red(`Error: Missing command argument, see ${l.bold("muto --help")}`)),process.exit(0)),u._[0]!=="query"&&(m(p.red(`Error: Unknown command, see ${l.bold("muto --help")}`)),process.exit(0)),u["--source"]||(m(p.red(`Error: Missing source, see ${l.bold("muto --help")}`)),process.exit(0)),u["--destination"]||(m(p.red(`Error: Missing destination, see ${l.bold("muto --help")}`)),process.exit(0));let t={input:u["--input"]||"csv",output:u["--output"]||"csv",name:u["--name"]||"first_query",source:u["--source"],destination:u["--destination"]};u._[1]===""&&(m(p.red(`Error: Missing query, see ${l.bold("muto --help")}`)),process.exit(1)),yield E(u._[1],t),process.exit(0)})}X().catch(console.error);function m(t){typeof t=="string"?process.stdout.write(`${t} 
`):process.stdout.write(`${JSON.stringify(t,null,2)} 
`)}process.on("unhandledRejection",(t,e)=>{m(t),process.exit(1)});
